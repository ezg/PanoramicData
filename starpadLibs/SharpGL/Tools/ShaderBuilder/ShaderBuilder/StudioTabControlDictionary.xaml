<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="{x:Type TabControl}" 
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
           xmlns:s="clr-namespace:System;assembly=mscorlib">
        <Style.Resources>
            <ResourceDictionary />
        </Style.Resources>
        <Setter Property="TextElement.Foreground">
            <Setter.Value>
                <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Padding">
            <Setter.Value>
                <Thickness>
                    4,4,4,4</Thickness>
            </Setter.Value>
        </Setter>
        <Setter Property="Border.BorderThickness">
            <Setter.Value>
                <Thickness>
                    1,1,1,1</Thickness>
            </Setter.Value>
        </Setter>
        <Setter Property="Border.BorderBrush">
            <Setter.Value>
                <SolidColorBrush>
                    #FF8C8E94</SolidColorBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background">
            <Setter.Value>
                <SolidColorBrush>
                    #FFF9F9F9</SolidColorBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.HorizontalContentAlignment">
            <Setter.Value>
                <x:Static Member="HorizontalAlignment.Center" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.VerticalContentAlignment">
            <Setter.Value>
                <x:Static Member="VerticalAlignment.Center" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="ColumnDefinition0" />
                            <ColumnDefinition Width="0" Name="ColumnDefinition1" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" Name="RowDefinition0" />
                            <RowDefinition Height="*" Name="RowDefinition1" />
                        </Grid.RowDefinitions>
                        <TabPanel IsItemsHost="True" Name="HeaderPanel" Margin="2,2,2,0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" Grid.Column="0" Grid.Row="0" />
                        <Border BorderThickness="{TemplateBinding Border.BorderThickness}" 
                                BorderBrush="{TemplateBinding Border.BorderBrush}"
                                Background="{TemplateBinding Panel.Background}"
                                Name="ContentPanel" 
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local"
                                KeyboardNavigation.DirectionalNavigation="Contained" 
                                Grid.Column="0" Grid.Row="1">
                            <ContentPresenter 
                                Content="{TemplateBinding TabControl.SelectedContent}"
                                ContentTemplate="{TemplateBinding TabControl.SelectedContentTemplate}"
                                ContentStringFormat="{TemplateBinding TabControl.SelectedContentStringFormat}" 
                                ContentSource="SelectedContent" Name="PART_SelectedContentHost" 
                                Margin="{TemplateBinding Control.Padding}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabControl.TabStripPlacement">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <s:Int32>
                                        1</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Row" TargetName="ContentPanel">
                                <Setter.Value>
                                    <s:Int32>
                                        0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition0">
                                <Setter.Value>
                                    <GridLength>
                                        *</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition1">
                                <Setter.Value>
                                    <GridLength>
                                        Auto</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Margin" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <Thickness>
                                        2,0,2,2</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <x:Static Member="Dock.Bottom" />
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <s:Int32>
                                        0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Row" TargetName="ContentPanel">
                                <Setter.Value>
                                    <s:Int32>
                                        0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <s:Int32>
                                        0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Column" TargetName="ContentPanel">
                                <Setter.Value>
                                    <s:Int32>
                                        1</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0">
                                <Setter.Value>
                                    <GridLength>
                                        Auto</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1">
                                <Setter.Value>
                                    <GridLength>
                                        *</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition0">
                                <Setter.Value>
                                    <GridLength>
                                        *</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition1">
                                <Setter.Value>
                                    <GridLength>
                                        0</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Margin" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <Thickness>
                                        2,2,0,2</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <x:Static Member="Dock.Left" />
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <s:Int32>
                                        0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Row" TargetName="ContentPanel">
                                <Setter.Value>
                                    <s:Int32>
                                        0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <s:Int32>
                                        1</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Column" TargetName="ContentPanel">
                                <Setter.Value>
                                    <s:Int32>
                                        0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0">
                                <Setter.Value>
                                    <GridLength>
                                        *</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1">
                                <Setter.Value>
                                    <GridLength>
                                        Auto</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition0">
                                <Setter.Value>
                                    <GridLength>
                                        *</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition1">
                                <Setter.Value>
                                    <GridLength>
                                        0</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Margin" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <Thickness>
                                        0,2,2,2</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <x:Static Member="Dock.Right" />
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled">
                            <Setter Property="TextElement.Foreground">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>
                                    False</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabItem}" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib">
        <Style.Resources>
            <ResourceDictionary />
        </Style.Resources>
        <Setter Property="FrameworkElement.FocusVisualStyle">
            <Setter.Value>
                <Style TargetType="{x:Type IFrameworkInputElement}">
                    <Style.Resources>
                        <ResourceDictionary />
                    </Style.Resources>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="3,3,3,1" SnapsToDevicePixels="True" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="TextElement.Foreground">
            <Setter.Value>
                <SolidColorBrush>
                    #FFFFFFFF</SolidColorBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Padding">
            <Setter.Value>
                <Thickness>
                    6,1,6,1</Thickness>
            </Setter.Value>
        </Setter>
        <Setter Property="Border.BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="Transparent" />
            </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background" Value="Transparent" />
        <Setter Property="Control.HorizontalContentAlignment">
            <Setter.Value>
                <x:Static Member="HorizontalAlignment.Stretch" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.VerticalContentAlignment">
            <Setter.Value>
                <x:Static Member="VerticalAlignment.Stretch" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid SnapsToDevicePixels="True">
                        <Border BorderThickness="1,1,1,0" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd">
                            <ContentPresenter 
                                RecognizesAccessKey="True" 
                                Content="{TemplateBinding HeaderedContentControl.Header}" 
                                ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" 
                                ContentStringFormat="{TemplateBinding HeaderedContentControl.HeaderStringFormat}" 
                                ContentSource="Header"
                                Name="Content" 
                                HorizontalAlignment="Stretch" 
                                VerticalAlignment="Stretch"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver">
                            <Setter Property="Panel.Background" TargetName="Bd">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Color="#22EAF6FD" Offset="0.15" />
                                            <GradientStop Color="#22D9F0FC" Offset="0.5" />
                                            <GradientStop Color="#22BEE6FD" Offset="0.5" />
                                            <GradientStop Color="#22A7D9F5" Offset="1" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>
                                    True</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="Selector.IsSelected">
                            <Setter Property="Panel.ZIndex">
                                <Setter.Value>
                                    <s:Int32>
                                        1</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Panel.Background" TargetName="Bd">
                                <Setter.Value>
                                    <SolidColorBrush>
                                        #FFF9F9F9</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="TextBlock.Foreground" Value="Black" />
                            <Trigger.Value>
                                <s:Boolean>
                                    True</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected">
                                    <Condition.Value>
                                        <s:Boolean>
                                            False</s:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="UIElement.IsMouseOver">
                                    <Condition.Value>
                                        <s:Boolean>
                                            True</s:Boolean>
                                    </Condition.Value>
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Border.BorderBrush" TargetName="Bd">
                                <Setter.Value>
                                    <SolidColorBrush>
                                        #FF3C7FB1</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <Trigger Property="TabItem.TabStripPlacement">
                            <Setter Property="Border.BorderThickness" TargetName="Bd">
                                <Setter.Value>
                                    <Thickness>
                                        1,0,1,1</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <x:Static Member="Dock.Bottom" />
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="TabItem.TabStripPlacement">
                            <Setter Property="Border.BorderThickness" TargetName="Bd">
                                <Setter.Value>
                                    <Thickness>
                                        1,1,0,1</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <x:Static Member="Dock.Left" />
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="TabItem.TabStripPlacement">
                            <Setter Property="Border.BorderThickness" TargetName="Bd">
                                <Setter.Value>
                                    <Thickness>
                                        0,1,1,1</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <x:Static Member="Dock.Right" />
                            </Trigger.Value>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected">
                                    <Condition.Value>
                                        <s:Boolean>
                                            True</s:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="TabItem.TabStripPlacement" 
                                           Value="{x:Static Dock.Top}" />
                            </MultiTrigger.Conditions>
                            <Setter Property="FrameworkElement.Margin">
                                <Setter.Value>
                                    <Thickness>
                                        -2,-2,-2,-1</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Margin" TargetName="Content">
                                <Setter.Value>
                                    <Thickness>
                                        0,0,0,1</Thickness>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected">
                                    <Condition.Value>
                                        <s:Boolean>
                                            True</s:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="TabItem.TabStripPlacement" 
                                           Value="{x:Static Dock.Bottom}" />
                            </MultiTrigger.Conditions>
                            <Setter Property="FrameworkElement.Margin">
                                <Setter.Value>
                                    <Thickness>
                                        -2,-1,-2,-2</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Margin" TargetName="Content">
                                <Setter.Value>
                                    <Thickness>
                                        0,1,0,0</Thickness>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected">
                                    <Condition.Value>
                                        <s:Boolean>
                                            True</s:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Left}" />
                            </MultiTrigger.Conditions>
                            <Setter Property="FrameworkElement.Margin">
                                <Setter.Value>
                                    <Thickness>
                                        -2,-2,-1,-2</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Margin" TargetName="Content">
                                <Setter.Value>
                                    <Thickness>
                                        0,0,1,0</Thickness>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected">
                                    <Condition.Value>
                                        <s:Boolean>
                                            True</s:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Right}" />
                            </MultiTrigger.Conditions>
                            <Setter Property="FrameworkElement.Margin">
                                <Setter.Value>
                                    <Thickness>
                                        -1,-2,-2,-2</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Margin" TargetName="Content">
                                <Setter.Value>
                                    <Thickness>
                                        1,0,0,0</Thickness>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled">
                            <Setter Property="Panel.Background" TargetName="Bd">
                                <Setter.Value>
                                    <SolidColorBrush>
                                        #FFF4F4F4</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="Bd">
                                <Setter.Value>
                                    <SolidColorBrush>
                                        #FFC9C7BA</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="TextElement.Foreground">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>
                                    False</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>