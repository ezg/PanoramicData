<UserControl x:Class="PanoramicData.view.filter.Filter"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:lib="http://schemas.thinkpixellab.com/2011/xaml/presentation"             
             xmlns:other="clr-namespace:PanoramicData.view.other"
             xmlns:math="clr-namespace:PanoramicData.view.math"
             mc:Ignorable="d" 
             d:DesignHeight="150" d:DesignWidth="500">
    <Grid Name="LayoutRoot" Background="White">
       <Grid.Resources>
            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                            <Grid SnapsToDevicePixels="True" Height="0">
                                <Border 
                                    VerticalAlignment="Stretch"
                                    BorderThickness="1,1,1,0" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd">
                                    <ContentPresenter 
                                        RecognizesAccessKey="True" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedContentControl.HeaderStringFormat}" ContentSource="Header" Name="Content" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="UIElement.IsMouseOver">
                                    <Setter TargetName="Bd" Property="Panel.Background">
                                        <Setter.Value>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Color="#FFEAF6FD" Offset="0.15" />
                                                    <GradientStop Color="#FFD9F0FC" Offset="0.5" />
                                                    <GradientStop Color="#FFBEE6FD" Offset="0.5" />
                                                    <GradientStop Color="#FFA7D9F5" Offset="1" />
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                        <s:Boolean>True</s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                                <Trigger Property="Selector.IsSelected">
                                    <Setter Property="Panel.ZIndex">
                                        <Setter.Value>
                                            <s:Int32>1</s:Int32>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="Bd" Property="Panel.Background">
                                        <Setter.Value>
                                            <SolidColorBrush>#FFF9F9F9</SolidColorBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                        <s:Boolean>True</s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelected">
                                            <Condition.Value>
                                                <s:Boolean>False</s:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                        <Condition Property="UIElement.IsMouseOver">
                                            <Condition.Value>
                                                <s:Boolean>True</s:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Border.BorderBrush">
                                        <Setter.Value>
                                            <SolidColorBrush>#FF3C7FB1</SolidColorBrush>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>
                                <Trigger Property="TabItem.TabStripPlacement">
                                    <Setter TargetName="Bd" Property="Border.BorderThickness">
                                        <Setter.Value>
                                            <Thickness>1,0,1,1</Thickness>
                                        </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                        <x:Static Member="Dock.Bottom" />
                                    </Trigger.Value>
                                </Trigger>
                                <Trigger Property="TabItem.TabStripPlacement">
                                    <Setter TargetName="Bd" Property="Border.BorderThickness">
                                        <Setter.Value>
                                            <Thickness>1,1,0,1</Thickness>
                                        </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                        <x:Static Member="Dock.Left" />
                                    </Trigger.Value>
                                </Trigger>
                                <Trigger Property="TabItem.TabStripPlacement">
                                    <Setter TargetName="Bd" Property="Border.BorderThickness">
                                        <Setter.Value>
                                            <Thickness>0,1,1,1</Thickness>
                                        </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                        <x:Static Member="Dock.Right" />
                                    </Trigger.Value>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelected">
                                            <Condition.Value>
                                                <s:Boolean>True</s:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                        <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Top}" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="FrameworkElement.Margin">
                                        <Setter.Value>
                                            <Thickness>-2,-2,-2,-1</Thickness>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="Content" Property="FrameworkElement.Margin">
                                        <Setter.Value>
                                            <Thickness>0,0,0,1</Thickness>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelected">
                                            <Condition.Value>
                                                <s:Boolean>True</s:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                        <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Bottom}" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="FrameworkElement.Margin">
                                        <Setter.Value>
                                            <Thickness>-2,-1,-2,-2</Thickness>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="Content" Property="FrameworkElement.Margin">
                                        <Setter.Value>
                                            <Thickness>0,1,0,0</Thickness>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelected">
                                            <Condition.Value>
                                                <s:Boolean>True</s:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                        <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Left}" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="FrameworkElement.Margin">
                                        <Setter.Value>
                                            <Thickness>-2,-2,-1,-2</Thickness>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="Content" Property="FrameworkElement.Margin">
                                        <Setter.Value>
                                            <Thickness>0,0,1,0</Thickness>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelected">
                                            <Condition.Value>
                                                <s:Boolean>True</s:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                        <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Right}" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="FrameworkElement.Margin">
                                        <Setter.Value>
                                            <Thickness>-1,-2,-2,-2</Thickness>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="Content" Property="FrameworkElement.Margin">
                                        <Setter.Value>
                                            <Thickness>1,0,0,0</Thickness>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>
                                <Trigger Property="UIElement.IsEnabled">
                                    <Setter TargetName="Bd" Property="Panel.Background">
                                        <Setter.Value>
                                            <SolidColorBrush>#FFF4F4F4</SolidColorBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="Bd" Property="Border.BorderBrush">
                                        <Setter.Value>
                                            <SolidColorBrush>#FFC9C7BA</SolidColorBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="TextElement.Foreground">
                                        <Setter.Value>
                                            <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                        </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                        <s:Boolean>False</s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type TabControl}">
                <Setter Property="TabStripPlacement" Value="Bottom" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="2"    />
                <Setter Property="Background" Value="White" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabControl" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib">
                            <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Name="ColumnDefinition0" />
                                    <ColumnDefinition Width="0" Name="ColumnDefinition1" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" Name="RowDefinition0" />
                                    <RowDefinition Height="*" Name="RowDefinition1" />
                                </Grid.RowDefinitions>
                                <TabPanel IsItemsHost="True" Name="HeaderPanel" Margin="0,0,0,0" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" Grid.Column="0" Grid.Row="0" />
                                
                                <Border BorderThickness="0,0,0,0" Margin="0,0,0,0"  BorderBrush="Gray" Background="{TemplateBinding Panel.Background}" Name="ContentPanel" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Column="0" Grid.Row="1">
                                    <ContentPresenter 
                                        ContentTemplateSelector="{TemplateBinding TabControl.ContentTemplateSelector}"
                                        Margin="0"
                                        Content="{TemplateBinding TabControl.SelectedContent}" ContentTemplate="{TemplateBinding TabControl.SelectedContentTemplate}" ContentStringFormat="{TemplateBinding TabControl.SelectedContentStringFormat}" ContentSource="SelectedContent" Name="PART_SelectedContentHost"  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TabControl.TabStripPlacement">
                                    <Setter TargetName="HeaderPanel" Property="Grid.Row">
                                        <Setter.Value>
                                            <s:Int32>1</s:Int32>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="ContentPanel" Property="Grid.Row">
                                        <Setter.Value>
                                            <s:Int32>0</s:Int32>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="RowDefinition0" Property="RowDefinition.Height">
                                        <Setter.Value>
                                            <GridLength>*</GridLength>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="RowDefinition1" Property="RowDefinition.Height">
                                        <Setter.Value>
                                            <GridLength>Auto</GridLength>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin">
                                        <Setter.Value>
                                            <Thickness>2,0,2,2</Thickness>
                                        </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                        <x:Static Member="Dock.Bottom" />
                                    </Trigger.Value>
                                </Trigger>
                                <Trigger Property="TabControl.TabStripPlacement">
                                    <Setter TargetName="HeaderPanel" Property="Grid.Row">
                                        <Setter.Value>
                                            <s:Int32>0</s:Int32>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="ContentPanel" Property="Grid.Row">
                                        <Setter.Value>
                                            <s:Int32>0</s:Int32>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="HeaderPanel" Property="Grid.Column">
                                        <Setter.Value>
                                            <s:Int32>0</s:Int32>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="ContentPanel" Property="Grid.Column">
                                        <Setter.Value>
                                            <s:Int32>1</s:Int32>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width">
                                        <Setter.Value>
                                            <GridLength>Auto</GridLength>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width">
                                        <Setter.Value>
                                            <GridLength>*</GridLength>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="RowDefinition0" Property="RowDefinition.Height">
                                        <Setter.Value>
                                            <GridLength>*</GridLength>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="RowDefinition1" Property="RowDefinition.Height">
                                        <Setter.Value>
                                            <GridLength>0</GridLength>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin">
                                        <Setter.Value>
                                            <Thickness>2,2,0,2</Thickness>
                                        </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                        <x:Static Member="Dock.Left" />
                                    </Trigger.Value>
                                </Trigger>
                                <Trigger Property="TabControl.TabStripPlacement">
                                    <Setter TargetName="HeaderPanel" Property="Grid.Row">
                                        <Setter.Value>
                                            <s:Int32>0</s:Int32>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="ContentPanel" Property="Grid.Row">
                                        <Setter.Value>
                                            <s:Int32>0</s:Int32>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="HeaderPanel" Property="Grid.Column">
                                        <Setter.Value>
                                            <s:Int32>1</s:Int32>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="ContentPanel" Property="Grid.Column">
                                        <Setter.Value>
                                            <s:Int32>0</s:Int32>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width">
                                        <Setter.Value>
                                            <GridLength>*</GridLength>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width">
                                        <Setter.Value>
                                            <GridLength>Auto</GridLength>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="RowDefinition0" Property="RowDefinition.Height">
                                        <Setter.Value>
                                            <GridLength>*</GridLength>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="RowDefinition1" Property="RowDefinition.Height">
                                        <Setter.Value>
                                            <GridLength>0</GridLength>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin">
                                        <Setter.Value>
                                            <Thickness>0,2,2,2</Thickness>
                                        </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                        <x:Static Member="Dock.Right" />
                                    </Trigger.Value>
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled">
                                    <Setter Property="TextElement.Foreground">
                                        <Setter.Value>
                                            <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                        </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                        <s:Boolean>False</s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <TabControl Grid.Row="0"  Name="tabs" TabStripPlacement="Bottom" Background="White">
            <!--<TabItem Header="Name" IsSelected="True">
            </TabItem>
            <TabItem Header="Name" IsSelected="false">
            </TabItem>-->
        </TabControl>
        
        <Button Content="Filter" Width ="0" Height="0" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,0,2"
                Click="inputGrid_Click"/>
 
        <Grid Name="inputGrid" Grid.Row="1">
            <other:SimpleAPage 
                x:Name="aPage" 
                Background="White"/>
            <math:RecognitionResultRenderer
                x:Name="recogRenderer"
                VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>

            <Label Name="result" VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
        </Grid>
    </Grid>
</UserControl>
