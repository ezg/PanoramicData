<UserControl x:Class="PanoramicData.view.table.SimpleDataGrid"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:lib="http://schemas.thinkpixellab.com/2011/xaml/presentation"
             xmlns:Behaviours="clr-namespace:PanoramicData.view.utils"
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="500">
    <Grid Background="White">
        <!--<Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stroke="Gray" StrokeThickness="2"/>-->
        
       <!-- <Grid.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="/PanoramicData;component/filter/style/ScrollBarStyle.xaml" />
                </ResourceDictionary.MergedDictionaries>
            </ResourceDictionary>
        </Grid.Resources>-->

        <Grid.Resources>
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
            <Style x:Key="OptionMarkFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
            <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
            <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
            <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
            <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
            <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
            <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
            <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
            <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
            <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
            
            <Style TargetType="{x:Type CheckBox}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Grid x:Name="markGrid">
                                        <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                        <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                    </Grid>
                                </Border>
                                <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasContent" Value="true">
                                    <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                    <Setter Property="Padding" Value="4,-1,0,0"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="IsManipulationEnabled" Value="True"/>
                <!--<EventSetter Event="ManipulationStarting" Handler="OnItemManipulationStarting"/>
                <EventSetter Event="ManipulationInertiaStarting" Handler="OnItemManipulationInertiaStarting"/>
                <EventSetter Event="ManipulationDelta" Handler="OnItemManipulationDelta"/>-->
                
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader" 
                                         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                                         xmlns:wpfDevices="clr-namespace:InputFramework.WPFDevices;assembly=InputFrameworkBase"
                                         xmlns:s="clr-namespace:System;assembly=mscorlib" 
                                         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                            <Grid SnapsToDevicePixels="True" Loaded="FrameworkElement_OnLoaded" 
                                  IsManipulationEnabled="True"
                                  Unloaded="FrameworkElement_OnUnloaded">
                                <Border BorderThickness="0,0,1,1" 
                                        BorderBrush="DarkGray" 
                                        Background="White"
                                        Name="HeaderBorder">
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                        <Border Grid.RowSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                            <ContentPresenter 
                                                RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" 
                                                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
                                                ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" 
                                                Name="HeaderContent" Margin="0,0,0,0" 
                                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                        </Border>
                                    </Grid>
                                </Border>
                                <Canvas>
                                    <Border 
                                        Canvas.Right="-15"
                                        Width="30"
                                        Padding="{TemplateBinding Control.Padding}" Background="#00FFFFFF">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="FrameworkElement.Height">
                                                    <Setter.Value>
                                                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Border.Style>
                                        <Rectangle Fill="#00000000" Width="30" HorizontalAlignment="Center"/>
                                    </Border>
                                    <Border 
                                        Canvas.Left="0"
                                        Width="1">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="FrameworkElement.Height">
                                                    <Setter.Value>
                                                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Border.Style>
                                        <Rectangle 
                                                Fill="White" Width="1" HorizontalAlignment="Center"  Margin="0,0,0,1"/>
                                    </Border>
                                    <Grid 
                                        Canvas.Right="0"
                                        Width="1">
                                        <Grid.Style>
                                            <Style TargetType="Grid">
                                                <Setter Property="FrameworkElement.Height">
                                                    <Setter.Value>
                                                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Grid.Style>
                                        <Rectangle 
                                                Fill="White" Height="15"  Width="1"  HorizontalAlignment="Center"  VerticalAlignment="Top" />
                                        <Rectangle 
                                                Fill="White" Height="15"  Width="1" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,1"/>
                                        <Rectangle 
                                                Name="hiddingRect"
                                                Fill="White" Width="1" HorizontalAlignment="Center"  Margin="0,0,0,1" Visibility="Collapsed"/>
                                    </Grid>
                                    <Border 
                                        Name="dragHighlight"
                                        Visibility="Collapsed"
                                        Canvas.Left="0"
                                        Margin="-1"
                                        Width="3">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="FrameworkElement.Height">
                                                    <Setter.Value>
                                                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Border.Style>
                                        <Rectangle 
                                                Fill="Black" Width="3" HorizontalAlignment="Center" />
                                    </Border>
                                </Canvas>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Column}" Value="{x:Null}">
                                    <Setter TargetName="hiddingRect" Property="FrameworkElement.Visibility">
                                        <Setter.Value>
                                            <Visibility>Visible</Visibility>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <Trigger Property="FrameworkElement.Height">
                                    <Setter Property="FrameworkElement.MinHeight">
                                        <Setter.Value>
                                            <s:Double>20</s:Double>
                                        </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                        <s:Double>NaN</s:Double>
                                    </Trigger.Value>
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled">
                                    <Setter Property="TextElement.Foreground">
                                        <Setter.Value>
                                            <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                        </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                        <s:Boolean>False</s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type ListView}">
                <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
                <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"/>
                <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListView}">
                            <Grid>
                                <ScrollViewer 
                                    Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}"
                                    VerticalScrollBarVisibility="Visible"
                                    HorizontalScrollBarVisibility="Hidden"
                                    Padding="{TemplateBinding Padding}"
                                    Focusable="False">
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </ScrollViewer>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style TargetType="{x:Type ListViewItem}">
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="0" BorderBrush="{TemplateBinding Border.BorderBrush}" 
                                    Name="Bd" SnapsToDevicePixels="True"
                                    Background="#01ffffff">
                                <GridViewRowPresenter
                                        TextBlock.Foreground="Black"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"/>
                            </Border>
                            <!--
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=Data.IsHighligthed}" Value="true">
                                    <Setter TargetName="Bd" Property="Background" 
                                            Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:SimpleDataGrid}}, Path=FilterModel.Brush}" />
                                    <Setter Property="Cursor" Value="Hand"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                            -->
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>
        </Grid.Resources>

        <Grid Margin="0">
            
            <ListView 
                Grid.Row="1"
                Grid.Column="1"
                Behaviours:GridViewColumnResize.Enabled="False"
                Name="listView" 
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"   
                VirtualizingStackPanel.IsVirtualizing="True"
                VirtualizingStackPanel.VirtualizationMode="Recycling"
                ScrollViewer.IsDeferredScrollingEnabled="True">
            </ListView>

            <!--
                ScrollViewer.PanningMode="Both"
                ScrollViewer.PanningDeceleration="0.0005"-->
            <!--
            <ItemsControl Grid.Row="1" 
                Name="itemsControl">

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel 
                            VirtualizingStackPanel.VirtualizationMode="Recycling"
                            VirtualizingStackPanel.IsVirtualizing="True"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.Template>
                    <ControlTemplate>
                        <Border
                            BorderThickness="{TemplateBinding Border.BorderThickness}"
                            Padding="{TemplateBinding Control.Padding}"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            Background="{TemplateBinding Panel.Background}"
                            SnapsToDevicePixels="True">
                            <ScrollViewer
                                PanningMode="Both" PanningDeceleration="0.0005"
                                Padding="{TemplateBinding Control.Padding}"
                                IsDeferredScrollingEnabled="True"
                                CanContentScroll="True"
                                Focusable="False">
                                <ItemsPresenter
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </ItemsControl.Template>
            </ItemsControl>
            -->

            <!--Grid  
                Background="#aaffffff"
                Name="loadingAnim"
                Grid.RowSpan="2">
                <Grid 
                    Width="300" Height="85" HorizontalAlignment="Center" VerticalAlignment="Center" >
                    <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stroke="Black" Fill="White"  StrokeThickness="1"/>
                    <TextBlock
                        Name="text"
                        FontSize="20" Margin="20,20,20,20"
                        Text="Loading..." TextWrapping="WrapWithOverflow"/>
                    <Canvas HorizontalAlignment="Center" Width="260" VerticalAlignment="Bottom" Height="30" ClipToBounds="True">
                        <Grid Margin="-20,0,-20,0" Height="20" VerticalAlignment="Bottom" Width="300">
                            <fb:LoadingRectangle OffsetSeconds="0.0" />
                            <fb:LoadingRectangle OffsetSeconds="0.2" />
                            <fb:LoadingRectangle OffsetSeconds="0.4" />
                            <fb:LoadingRectangle OffsetSeconds="0.6" />
                            <fb:LoadingRectangle OffsetSeconds="0.8" />
                        </Grid>
                    </Canvas>
                </Grid>
            </Grid-->
        </Grid>
    </Grid>
</UserControl>
