//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PanoramicData.BingMapService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestBase", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ReverseGeocodeRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SearchRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ImageryMetadataRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.MapUriRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RouteRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.MajorRoutesRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.GeocodeRequest))]
    public partial class RequestBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Credentials CredentialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CultureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.ExecutionOptions ExecutionOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.UserProfile UserProfileField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Credentials Credentials {
            get {
                return this.CredentialsField;
            }
            set {
                if ((object.ReferenceEquals(this.CredentialsField, value) != true)) {
                    this.CredentialsField = value;
                    this.RaisePropertyChanged("Credentials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Culture {
            get {
                return this.CultureField;
            }
            set {
                if ((object.ReferenceEquals(this.CultureField, value) != true)) {
                    this.CultureField = value;
                    this.RaisePropertyChanged("Culture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.ExecutionOptions ExecutionOptions {
            get {
                return this.ExecutionOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecutionOptionsField, value) != true)) {
                    this.ExecutionOptionsField = value;
                    this.RaisePropertyChanged("ExecutionOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.UserProfile UserProfile {
            get {
                return this.UserProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.UserProfileField, value) != true)) {
                    this.UserProfileField = value;
                    this.RaisePropertyChanged("UserProfile");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Credentials", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    [System.SerializableAttribute()]
    public partial class Credentials : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationId {
            get {
                return this.ApplicationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationIdField, value) != true)) {
                    this.ApplicationIdField = value;
                    this.RaisePropertyChanged("ApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExecutionOptions", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    [System.SerializableAttribute()]
    public partial class ExecutionOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuppressFaultsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SuppressFaults {
            get {
                return this.SuppressFaultsField;
            }
            set {
                if ((this.SuppressFaultsField.Equals(value) != true)) {
                    this.SuppressFaultsField = value;
                    this.RaisePropertyChanged("SuppressFaults");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserProfile", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    [System.SerializableAttribute()]
    public partial class UserProfile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Heading CurrentHeadingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.UserLocation CurrentLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.DeviceType DeviceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.DistanceUnit DistanceUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.ShapeBase MapViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.SizeOfint ScreenSizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Heading CurrentHeading {
            get {
                return this.CurrentHeadingField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentHeadingField, value) != true)) {
                    this.CurrentHeadingField = value;
                    this.RaisePropertyChanged("CurrentHeading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.UserLocation CurrentLocation {
            get {
                return this.CurrentLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentLocationField, value) != true)) {
                    this.CurrentLocationField = value;
                    this.RaisePropertyChanged("CurrentLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.DeviceType DeviceType {
            get {
                return this.DeviceTypeField;
            }
            set {
                if ((this.DeviceTypeField.Equals(value) != true)) {
                    this.DeviceTypeField = value;
                    this.RaisePropertyChanged("DeviceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.DistanceUnit DistanceUnit {
            get {
                return this.DistanceUnitField;
            }
            set {
                if ((this.DistanceUnitField.Equals(value) != true)) {
                    this.DistanceUnitField = value;
                    this.RaisePropertyChanged("DistanceUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.ShapeBase MapView {
            get {
                return this.MapViewField;
            }
            set {
                if ((object.ReferenceEquals(this.MapViewField, value) != true)) {
                    this.MapViewField = value;
                    this.RaisePropertyChanged("MapView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.SizeOfint ScreenSize {
            get {
                return this.ScreenSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.ScreenSizeField, value) != true)) {
                    this.ScreenSizeField = value;
                    this.RaisePropertyChanged("ScreenSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReverseGeocodeRequest", Namespace="http://dev.virtualearth.net/webservices/v1/geocode")]
    [System.SerializableAttribute()]
    public partial class ReverseGeocodeRequest : PanoramicData.BingMapService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Location LocationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Location Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchRequest", Namespace="http://dev.virtualearth.net/webservices/v1/search")]
    [System.SerializableAttribute()]
    public partial class SearchRequest : PanoramicData.BingMapService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QueryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.SearchOptions SearchOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.StructuredSearchQuery StructuredQueryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Query {
            get {
                return this.QueryField;
            }
            set {
                if ((object.ReferenceEquals(this.QueryField, value) != true)) {
                    this.QueryField = value;
                    this.RaisePropertyChanged("Query");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.SearchOptions SearchOptions {
            get {
                return this.SearchOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchOptionsField, value) != true)) {
                    this.SearchOptionsField = value;
                    this.RaisePropertyChanged("SearchOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.StructuredSearchQuery StructuredQuery {
            get {
                return this.StructuredQueryField;
            }
            set {
                if ((object.ReferenceEquals(this.StructuredQueryField, value) != true)) {
                    this.StructuredQueryField = value;
                    this.RaisePropertyChanged("StructuredQuery");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageryMetadataRequest", Namespace="http://dev.virtualearth.net/webservices/v1/imagery")]
    [System.SerializableAttribute()]
    public partial class ImageryMetadataRequest : PanoramicData.BingMapService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.ImageryMetadataOptions OptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.MapStyle StyleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.ImageryMetadataOptions Options {
            get {
                return this.OptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.OptionsField, value) != true)) {
                    this.OptionsField = value;
                    this.RaisePropertyChanged("Options");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.MapStyle Style {
            get {
                return this.StyleField;
            }
            set {
                if ((this.StyleField.Equals(value) != true)) {
                    this.StyleField = value;
                    this.RaisePropertyChanged("Style");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MapUriRequest", Namespace="http://dev.virtualearth.net/webservices/v1/imagery")]
    [System.SerializableAttribute()]
    public partial class MapUriRequest : PanoramicData.BingMapService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Location CenterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Location MajorRoutesDestinationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.MapUriOptions OptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<PanoramicData.BingMapService.Pushpin> PushpinsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Location Center {
            get {
                return this.CenterField;
            }
            set {
                if ((object.ReferenceEquals(this.CenterField, value) != true)) {
                    this.CenterField = value;
                    this.RaisePropertyChanged("Center");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Location MajorRoutesDestination {
            get {
                return this.MajorRoutesDestinationField;
            }
            set {
                if ((object.ReferenceEquals(this.MajorRoutesDestinationField, value) != true)) {
                    this.MajorRoutesDestinationField = value;
                    this.RaisePropertyChanged("MajorRoutesDestination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.MapUriOptions Options {
            get {
                return this.OptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.OptionsField, value) != true)) {
                    this.OptionsField = value;
                    this.RaisePropertyChanged("Options");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PanoramicData.BingMapService.Pushpin> Pushpins {
            get {
                return this.PushpinsField;
            }
            set {
                if ((object.ReferenceEquals(this.PushpinsField, value) != true)) {
                    this.PushpinsField = value;
                    this.RaisePropertyChanged("Pushpins");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RouteRequest", Namespace="http://dev.virtualearth.net/webservices/v1/route")]
    [System.SerializableAttribute()]
    public partial class RouteRequest : PanoramicData.BingMapService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.RouteOptions OptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<PanoramicData.BingMapService.Waypoint> WaypointsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.RouteOptions Options {
            get {
                return this.OptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.OptionsField, value) != true)) {
                    this.OptionsField = value;
                    this.RaisePropertyChanged("Options");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PanoramicData.BingMapService.Waypoint> Waypoints {
            get {
                return this.WaypointsField;
            }
            set {
                if ((object.ReferenceEquals(this.WaypointsField, value) != true)) {
                    this.WaypointsField = value;
                    this.RaisePropertyChanged("Waypoints");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MajorRoutesRequest", Namespace="http://dev.virtualearth.net/webservices/v1/route")]
    [System.SerializableAttribute()]
    public partial class MajorRoutesRequest : PanoramicData.BingMapService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Waypoint DestinationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.MajorRoutesOptions OptionsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Waypoint Destination {
            get {
                return this.DestinationField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationField, value) != true)) {
                    this.DestinationField = value;
                    this.RaisePropertyChanged("Destination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.MajorRoutesOptions Options {
            get {
                return this.OptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.OptionsField, value) != true)) {
                    this.OptionsField = value;
                    this.RaisePropertyChanged("Options");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeocodeRequest", Namespace="http://dev.virtualearth.net/webservices/v1/geocode")]
    [System.SerializableAttribute()]
    public partial class GeocodeRequest : PanoramicData.BingMapService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Address AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.GeocodeOptions OptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QueryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Address Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.GeocodeOptions Options {
            get {
                return this.OptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.OptionsField, value) != true)) {
                    this.OptionsField = value;
                    this.RaisePropertyChanged("Options");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Query {
            get {
                return this.QueryField;
            }
            set {
                if ((object.ReferenceEquals(this.QueryField, value) != true)) {
                    this.QueryField = value;
                    this.RaisePropertyChanged("Query");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    [System.SerializableAttribute()]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdminDistrictField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryRegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormattedAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalTownField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine {
            get {
                return this.AddressLineField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLineField, value) != true)) {
                    this.AddressLineField = value;
                    this.RaisePropertyChanged("AddressLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdminDistrict {
            get {
                return this.AdminDistrictField;
            }
            set {
                if ((object.ReferenceEquals(this.AdminDistrictField, value) != true)) {
                    this.AdminDistrictField = value;
                    this.RaisePropertyChanged("AdminDistrict");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryRegion {
            get {
                return this.CountryRegionField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryRegionField, value) != true)) {
                    this.CountryRegionField = value;
                    this.RaisePropertyChanged("CountryRegion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string District {
            get {
                return this.DistrictField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictField, value) != true)) {
                    this.DistrictField = value;
                    this.RaisePropertyChanged("District");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormattedAddress {
            get {
                return this.FormattedAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.FormattedAddressField, value) != true)) {
                    this.FormattedAddressField = value;
                    this.RaisePropertyChanged("FormattedAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Locality {
            get {
                return this.LocalityField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalityField, value) != true)) {
                    this.LocalityField = value;
                    this.RaisePropertyChanged("Locality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalTown {
            get {
                return this.PostalTownField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalTownField, value) != true)) {
                    this.PostalTownField = value;
                    this.RaisePropertyChanged("PostalTown");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeocodeOptions", Namespace="http://dev.virtualearth.net/webservices/v1/geocode")]
    [System.SerializableAttribute()]
    public partial class GeocodeOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<PanoramicData.BingMapService.FilterBase> FiltersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PanoramicData.BingMapService.FilterBase> Filters {
            get {
                return this.FiltersField;
            }
            set {
                if ((object.ReferenceEquals(this.FiltersField, value) != true)) {
                    this.FiltersField = value;
                    this.RaisePropertyChanged("Filters");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Heading", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    [System.SerializableAttribute()]
    public partial class Heading : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OrientationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Orientation {
            get {
                return this.OrientationField;
            }
            set {
                if ((this.OrientationField.Equals(value) != true)) {
                    this.OrientationField = value;
                    this.RaisePropertyChanged("Orientation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserLocation", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    [System.SerializableAttribute()]
    public partial class UserLocation : PanoramicData.BingMapService.Location {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Confidence ConfidenceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Confidence Confidence {
            get {
                return this.ConfidenceField;
            }
            set {
                if ((this.ConfidenceField.Equals(value) != true)) {
                    this.ConfidenceField = value;
                    this.RaisePropertyChanged("Confidence");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShapeBase", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Rectangle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Circle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Polygon))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SearchPoint))]
    public partial class ShapeBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SizeOfint", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    [System.SerializableAttribute()]
    public partial class SizeOfint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceType", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    public enum DeviceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Desktop = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mobile = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DistanceUnit", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    public enum DistanceUnit : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Kilometer = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mile = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.GeocodeLocation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.UserLocation))]
    public partial class Location : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AltitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Altitude {
            get {
                return this.AltitudeField;
            }
            set {
                if ((this.AltitudeField.Equals(value) != true)) {
                    this.AltitudeField = value;
                    this.RaisePropertyChanged("Altitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeocodeLocation", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    [System.SerializableAttribute()]
    public partial class GeocodeLocation : PanoramicData.BingMapService.Location {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CalculationMethodField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CalculationMethod {
            get {
                return this.CalculationMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.CalculationMethodField, value) != true)) {
                    this.CalculationMethodField = value;
                    this.RaisePropertyChanged("CalculationMethod");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Confidence", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    public enum Confidence : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        High = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Medium = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Low = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rectangle", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    [System.SerializableAttribute()]
    public partial class Rectangle : PanoramicData.BingMapService.ShapeBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Location NortheastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Location SouthwestField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Location Northeast {
            get {
                return this.NortheastField;
            }
            set {
                if ((object.ReferenceEquals(this.NortheastField, value) != true)) {
                    this.NortheastField = value;
                    this.RaisePropertyChanged("Northeast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Location Southwest {
            get {
                return this.SouthwestField;
            }
            set {
                if ((object.ReferenceEquals(this.SouthwestField, value) != true)) {
                    this.SouthwestField = value;
                    this.RaisePropertyChanged("Southwest");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Circle", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    [System.SerializableAttribute()]
    public partial class Circle : PanoramicData.BingMapService.ShapeBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Location CenterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.DistanceUnit DistanceUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RadiusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Location Center {
            get {
                return this.CenterField;
            }
            set {
                if ((object.ReferenceEquals(this.CenterField, value) != true)) {
                    this.CenterField = value;
                    this.RaisePropertyChanged("Center");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.DistanceUnit DistanceUnit {
            get {
                return this.DistanceUnitField;
            }
            set {
                if ((this.DistanceUnitField.Equals(value) != true)) {
                    this.DistanceUnitField = value;
                    this.RaisePropertyChanged("DistanceUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Radius {
            get {
                return this.RadiusField;
            }
            set {
                if ((this.RadiusField.Equals(value) != true)) {
                    this.RadiusField = value;
                    this.RaisePropertyChanged("Radius");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Polygon", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    [System.SerializableAttribute()]
    public partial class Polygon : PanoramicData.BingMapService.ShapeBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<PanoramicData.BingMapService.Location> VerticesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PanoramicData.BingMapService.Location> Vertices {
            get {
                return this.VerticesField;
            }
            set {
                if ((object.ReferenceEquals(this.VerticesField, value) != true)) {
                    this.VerticesField = value;
                    this.RaisePropertyChanged("Vertices");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchPoint", Namespace="http://dev.virtualearth.net/webservices/v1/search")]
    [System.SerializableAttribute()]
    public partial class SearchPoint : PanoramicData.BingMapService.ShapeBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Location PointField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Location Point {
            get {
                return this.PointField;
            }
            set {
                if ((object.ReferenceEquals(this.PointField, value) != true)) {
                    this.PointField = value;
                    this.RaisePropertyChanged("Point");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchOptions", Namespace="http://dev.virtualearth.net/webservices/v1/search")]
    [System.SerializableAttribute()]
    public partial class SearchOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AutocorrectQueryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.FilterExpressionBase FiltersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.ListingType ListingTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ParseOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> RadiusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.SortOrder SortOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartingIndexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AutocorrectQuery {
            get {
                return this.AutocorrectQueryField;
            }
            set {
                if ((this.AutocorrectQueryField.Equals(value) != true)) {
                    this.AutocorrectQueryField = value;
                    this.RaisePropertyChanged("AutocorrectQuery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.FilterExpressionBase Filters {
            get {
                return this.FiltersField;
            }
            set {
                if ((object.ReferenceEquals(this.FiltersField, value) != true)) {
                    this.FiltersField = value;
                    this.RaisePropertyChanged("Filters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.ListingType ListingType {
            get {
                return this.ListingTypeField;
            }
            set {
                if ((this.ListingTypeField.Equals(value) != true)) {
                    this.ListingTypeField = value;
                    this.RaisePropertyChanged("ListingType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ParseOnly {
            get {
                return this.ParseOnlyField;
            }
            set {
                if ((this.ParseOnlyField.Equals(value) != true)) {
                    this.ParseOnlyField = value;
                    this.RaisePropertyChanged("ParseOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Radius {
            get {
                return this.RadiusField;
            }
            set {
                if ((this.RadiusField.Equals(value) != true)) {
                    this.RadiusField = value;
                    this.RaisePropertyChanged("Radius");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.SortOrder SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StartingIndex {
            get {
                return this.StartingIndexField;
            }
            set {
                if ((this.StartingIndexField.Equals(value) != true)) {
                    this.StartingIndexField = value;
                    this.RaisePropertyChanged("StartingIndex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StructuredSearchQuery", Namespace="http://dev.virtualearth.net/webservices/v1/search")]
    [System.SerializableAttribute()]
    public partial class StructuredSearchQuery : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeywordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keyword {
            get {
                return this.KeywordField;
            }
            set {
                if ((object.ReferenceEquals(this.KeywordField, value) != true)) {
                    this.KeywordField = value;
                    this.RaisePropertyChanged("Keyword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FilterExpressionBase", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.FilterExpression))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.FilterExpressionClause))]
    public partial class FilterExpressionBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListingType", Namespace="http://dev.virtualearth.net/webservices/v1/search")]
    public enum ListingType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Business = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommunityContent = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Person = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SortOrder", Namespace="http://dev.virtualearth.net/webservices/v1/search")]
    public enum SortOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Relevance = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Distance = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rating = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Popularity = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FilterExpression", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.GeocodeRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.GeocodeOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.FilterBase>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.FilterBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ConfidenceFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.GeocodeResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ReverseGeocodeRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RequestBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Credentials))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ExecutionOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.UserProfile))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Heading))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.UserLocation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Location))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.GeocodeLocation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Confidence))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.DeviceType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.DistanceUnit))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ShapeBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Rectangle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Circle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Polygon))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.Location>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SizeOfint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Address))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ResponseBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ResponseSummary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.AuthenticationResultCode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ResponseStatusCode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.GeocodeResult>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.GeocodeResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.GeocodeLocation>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SearchRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SearchOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ListingType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SortOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.StructuredSearchQuery))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SearchResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.QuerySuggestion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.SearchResultSet>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SearchResultSet))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.SearchRegion>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SearchRegion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.AvailableFilter>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.AvailableFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ValueListFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Neighborhood))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.FilterValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Category))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RangeFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.CategoryCount>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.CategoryCount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Parse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.SearchResultBase>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SearchResultBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.LocationData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.CommunityContentSearchResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.BusinessSearchResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.Category>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.CategorySpecificPropertySet))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.Neighborhood>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.PersonSearchResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<PanoramicData.BingMapService.Neighborhood, int>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, PanoramicData.BingMapService.CategorySpecificPropertySet>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.FilterExpressionBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.LogicalOperator))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.CompareOperator))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.FilterExpressionClause))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.FilterExpressionBase>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ImageryMetadataRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ImageryMetadataOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ImageryMetadataResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.ImageryMetadataResult>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ImageryMetadataResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.ImageryProvider>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ImageryProvider))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.CoverageArea>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.CoverageArea))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ImageryMetadataBirdseyeResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.MapUriRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.MapUriOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.MapUriResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SearchPoint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.UriScheme))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.MapStyle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RangeOfint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RangeOfdateTime))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ImageType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.Pushpin>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Pushpin))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RouteRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RouteOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.TravelMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RouteOptimization))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RoutePathType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.TrafficUsage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.Waypoint>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Waypoint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RouteResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RouteResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.RouteLeg>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RouteLeg))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.ItineraryItem>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ItineraryItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.ItineraryItemHint>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ItineraryItemHint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ItineraryItemHintType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ManeuverType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RouteSummary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.ItineraryItemWarning>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ItineraryItemWarning))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ItineraryWarningSeverity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ItineraryWarningType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RoutePath))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.MajorRoutesRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.MajorRoutesOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.MajorRoutesResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.RouteResult>))]
    public partial class FilterExpression : PanoramicData.BingMapService.FilterExpressionBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.CompareOperator CompareOperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object FilterValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PropertyIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.CompareOperator CompareOperator {
            get {
                return this.CompareOperatorField;
            }
            set {
                if ((this.CompareOperatorField.Equals(value) != true)) {
                    this.CompareOperatorField = value;
                    this.RaisePropertyChanged("CompareOperator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object FilterValue {
            get {
                return this.FilterValueField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterValueField, value) != true)) {
                    this.FilterValueField = value;
                    this.RaisePropertyChanged("FilterValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PropertyId {
            get {
                return this.PropertyIdField;
            }
            set {
                if ((this.PropertyIdField.Equals(value) != true)) {
                    this.PropertyIdField = value;
                    this.RaisePropertyChanged("PropertyId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FilterExpressionClause", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    [System.SerializableAttribute()]
    public partial class FilterExpressionClause : PanoramicData.BingMapService.FilterExpressionBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<PanoramicData.BingMapService.FilterExpressionBase> ExpressionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.LogicalOperator LogicalOperatorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PanoramicData.BingMapService.FilterExpressionBase> Expressions {
            get {
                return this.ExpressionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpressionsField, value) != true)) {
                    this.ExpressionsField = value;
                    this.RaisePropertyChanged("Expressions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.LogicalOperator LogicalOperator {
            get {
                return this.LogicalOperatorField;
            }
            set {
                if ((this.LogicalOperatorField.Equals(value) != true)) {
                    this.LogicalOperatorField = value;
                    this.RaisePropertyChanged("LogicalOperator");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FilterBase", Namespace="http://dev.virtualearth.net/webservices/v1/geocode")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ConfidenceFilter))]
    public partial class FilterBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConfidenceFilter", Namespace="http://dev.virtualearth.net/webservices/v1/geocode")]
    [System.SerializableAttribute()]
    public partial class ConfidenceFilter : PanoramicData.BingMapService.FilterBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Confidence MinimumConfidenceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Confidence MinimumConfidence {
            get {
                return this.MinimumConfidenceField;
            }
            set {
                if ((this.MinimumConfidenceField.Equals(value) != true)) {
                    this.MinimumConfidenceField = value;
                    this.RaisePropertyChanged("MinimumConfidence");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeocodeResponse", Namespace="http://dev.virtualearth.net/webservices/v1/geocode")]
    [System.SerializableAttribute()]
    public partial class GeocodeResponse : PanoramicData.BingMapService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<PanoramicData.BingMapService.GeocodeResult> ResultsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PanoramicData.BingMapService.GeocodeResult> Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseBase", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SearchResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ImageryMetadataResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.MapUriResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RouteResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.MajorRoutesResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.GeocodeResponse))]
    public partial class ResponseBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri BrandLogoUriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.ResponseSummary ResponseSummaryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri BrandLogoUri {
            get {
                return this.BrandLogoUriField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandLogoUriField, value) != true)) {
                    this.BrandLogoUriField = value;
                    this.RaisePropertyChanged("BrandLogoUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.ResponseSummary ResponseSummary {
            get {
                return this.ResponseSummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseSummaryField, value) != true)) {
                    this.ResponseSummaryField = value;
                    this.RaisePropertyChanged("ResponseSummary");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseSummary", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    [System.SerializableAttribute()]
    public partial class ResponseSummary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.AuthenticationResultCode AuthenticationResultCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CopyrightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaultReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.ResponseStatusCode StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraceIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.AuthenticationResultCode AuthenticationResultCode {
            get {
                return this.AuthenticationResultCodeField;
            }
            set {
                if ((this.AuthenticationResultCodeField.Equals(value) != true)) {
                    this.AuthenticationResultCodeField = value;
                    this.RaisePropertyChanged("AuthenticationResultCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Copyright {
            get {
                return this.CopyrightField;
            }
            set {
                if ((object.ReferenceEquals(this.CopyrightField, value) != true)) {
                    this.CopyrightField = value;
                    this.RaisePropertyChanged("Copyright");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaultReason {
            get {
                return this.FaultReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.FaultReasonField, value) != true)) {
                    this.FaultReasonField = value;
                    this.RaisePropertyChanged("FaultReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.ResponseStatusCode StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((this.StatusCodeField.Equals(value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraceId {
            get {
                return this.TraceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TraceIdField, value) != true)) {
                    this.TraceIdField = value;
                    this.RaisePropertyChanged("TraceId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationResultCode", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    public enum AuthenticationResultCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoCredentials = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidCredentials = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidCredentials = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CredentialsExpired = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotAuthorized = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseStatusCode", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    public enum ResponseStatusCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BadRequest = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServerError = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeocodeResult", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    [System.SerializableAttribute()]
    public partial class GeocodeResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Address AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Rectangle BestViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Confidence ConfidenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<PanoramicData.BingMapService.GeocodeLocation> LocationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> MatchCodesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Address Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Rectangle BestView {
            get {
                return this.BestViewField;
            }
            set {
                if ((object.ReferenceEquals(this.BestViewField, value) != true)) {
                    this.BestViewField = value;
                    this.RaisePropertyChanged("BestView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Confidence Confidence {
            get {
                return this.ConfidenceField;
            }
            set {
                if ((this.ConfidenceField.Equals(value) != true)) {
                    this.ConfidenceField = value;
                    this.RaisePropertyChanged("Confidence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityType {
            get {
                return this.EntityTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityTypeField, value) != true)) {
                    this.EntityTypeField = value;
                    this.RaisePropertyChanged("EntityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PanoramicData.BingMapService.GeocodeLocation> Locations {
            get {
                return this.LocationsField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationsField, value) != true)) {
                    this.LocationsField = value;
                    this.RaisePropertyChanged("Locations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> MatchCodes {
            get {
                return this.MatchCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchCodesField, value) != true)) {
                    this.MatchCodesField = value;
                    this.RaisePropertyChanged("MatchCodes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchResponse", Namespace="http://dev.virtualearth.net/webservices/v1/search")]
    [System.SerializableAttribute()]
    public partial class SearchResponse : PanoramicData.BingMapService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.QuerySuggestion QuerySuggestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<PanoramicData.BingMapService.SearchResultSet> ResultSetsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.QuerySuggestion QuerySuggestion {
            get {
                return this.QuerySuggestionField;
            }
            set {
                if ((object.ReferenceEquals(this.QuerySuggestionField, value) != true)) {
                    this.QuerySuggestionField = value;
                    this.RaisePropertyChanged("QuerySuggestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PanoramicData.BingMapService.SearchResultSet> ResultSets {
            get {
                return this.ResultSetsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultSetsField, value) != true)) {
                    this.ResultSetsField = value;
                    this.RaisePropertyChanged("ResultSets");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuerySuggestion", Namespace="http://dev.virtualearth.net/webservices/v1/search")]
    [System.SerializableAttribute()]
    public partial class QuerySuggestion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QueryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.StructuredSearchQuery StructuredQueryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Query {
            get {
                return this.QueryField;
            }
            set {
                if ((object.ReferenceEquals(this.QueryField, value) != true)) {
                    this.QueryField = value;
                    this.RaisePropertyChanged("Query");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.StructuredSearchQuery StructuredQuery {
            get {
                return this.StructuredQueryField;
            }
            set {
                if ((object.ReferenceEquals(this.StructuredQueryField, value) != true)) {
                    this.StructuredQueryField = value;
                    this.RaisePropertyChanged("StructuredQuery");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchResultSet", Namespace="http://dev.virtualearth.net/webservices/v1/search")]
    [System.SerializableAttribute()]
    public partial class SearchResultSet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<PanoramicData.BingMapService.SearchRegion> AlternateSearchRegionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<PanoramicData.BingMapService.AvailableFilter> AvailableFiltersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<PanoramicData.BingMapService.CategoryCount> CategoryCountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EstimatedMatchesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListingTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Parse ParseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Category QueryCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool QueryCorrectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<PanoramicData.BingMapService.SearchResultBase> ResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.SearchRegion SearchRegionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PanoramicData.BingMapService.SearchRegion> AlternateSearchRegions {
            get {
                return this.AlternateSearchRegionsField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateSearchRegionsField, value) != true)) {
                    this.AlternateSearchRegionsField = value;
                    this.RaisePropertyChanged("AlternateSearchRegions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PanoramicData.BingMapService.AvailableFilter> AvailableFilters {
            get {
                return this.AvailableFiltersField;
            }
            set {
                if ((object.ReferenceEquals(this.AvailableFiltersField, value) != true)) {
                    this.AvailableFiltersField = value;
                    this.RaisePropertyChanged("AvailableFilters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PanoramicData.BingMapService.CategoryCount> CategoryCounts {
            get {
                return this.CategoryCountsField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryCountsField, value) != true)) {
                    this.CategoryCountsField = value;
                    this.RaisePropertyChanged("CategoryCounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EstimatedMatches {
            get {
                return this.EstimatedMatchesField;
            }
            set {
                if ((this.EstimatedMatchesField.Equals(value) != true)) {
                    this.EstimatedMatchesField = value;
                    this.RaisePropertyChanged("EstimatedMatches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListingType {
            get {
                return this.ListingTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ListingTypeField, value) != true)) {
                    this.ListingTypeField = value;
                    this.RaisePropertyChanged("ListingType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Parse Parse {
            get {
                return this.ParseField;
            }
            set {
                if ((object.ReferenceEquals(this.ParseField, value) != true)) {
                    this.ParseField = value;
                    this.RaisePropertyChanged("Parse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Category QueryCategory {
            get {
                return this.QueryCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.QueryCategoryField, value) != true)) {
                    this.QueryCategoryField = value;
                    this.RaisePropertyChanged("QueryCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool QueryCorrected {
            get {
                return this.QueryCorrectedField;
            }
            set {
                if ((this.QueryCorrectedField.Equals(value) != true)) {
                    this.QueryCorrectedField = value;
                    this.RaisePropertyChanged("QueryCorrected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PanoramicData.BingMapService.SearchResultBase> Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.SearchRegion SearchRegion {
            get {
                return this.SearchRegionField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchRegionField, value) != true)) {
                    this.SearchRegionField = value;
                    this.RaisePropertyChanged("SearchRegion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchRegion", Namespace="http://dev.virtualearth.net/webservices/v1/search")]
    [System.SerializableAttribute()]
    public partial class SearchRegion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.ShapeBase BoundingAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.GeocodeResult GeocodeLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.ShapeBase BoundingArea {
            get {
                return this.BoundingAreaField;
            }
            set {
                if ((object.ReferenceEquals(this.BoundingAreaField, value) != true)) {
                    this.BoundingAreaField = value;
                    this.RaisePropertyChanged("BoundingArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.GeocodeResult GeocodeLocation {
            get {
                return this.GeocodeLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocodeLocationField, value) != true)) {
                    this.GeocodeLocationField = value;
                    this.RaisePropertyChanged("GeocodeLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AvailableFilter", Namespace="http://dev.virtualearth.net/webservices/v1/search")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ValueListFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RangeFilter))]
    public partial class AvailableFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PropertyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PropertyId {
            get {
                return this.PropertyIdField;
            }
            set {
                if ((this.PropertyIdField.Equals(value) != true)) {
                    this.PropertyIdField = value;
                    this.RaisePropertyChanged("PropertyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyName {
            get {
                return this.PropertyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyNameField, value) != true)) {
                    this.PropertyNameField = value;
                    this.RaisePropertyChanged("PropertyName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValueListFilter", Namespace="http://dev.virtualearth.net/webservices/v1/search")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.GeocodeRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.GeocodeOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.FilterBase>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.FilterBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ConfidenceFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.GeocodeResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ReverseGeocodeRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RequestBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Credentials))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ExecutionOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.UserProfile))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Heading))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.UserLocation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Location))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.GeocodeLocation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Confidence))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.DeviceType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.DistanceUnit))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ShapeBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Rectangle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Circle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Polygon))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.Location>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SizeOfint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Address))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ResponseBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ResponseSummary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.AuthenticationResultCode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ResponseStatusCode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.GeocodeResult>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.GeocodeResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.GeocodeLocation>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SearchRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SearchOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ListingType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SortOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.StructuredSearchQuery))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SearchResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.QuerySuggestion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.SearchResultSet>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SearchResultSet))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.SearchRegion>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SearchRegion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.AvailableFilter>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.AvailableFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Neighborhood))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.FilterValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Category))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RangeFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.CategoryCount>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.CategoryCount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Parse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.SearchResultBase>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SearchResultBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.LocationData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.CommunityContentSearchResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.BusinessSearchResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.Category>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.CategorySpecificPropertySet))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.Neighborhood>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.PersonSearchResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<PanoramicData.BingMapService.Neighborhood, int>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, PanoramicData.BingMapService.CategorySpecificPropertySet>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.FilterExpressionBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.LogicalOperator))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.FilterExpression))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.CompareOperator))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.FilterExpressionClause))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.FilterExpressionBase>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ImageryMetadataRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ImageryMetadataOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ImageryMetadataResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.ImageryMetadataResult>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ImageryMetadataResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.ImageryProvider>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ImageryProvider))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.CoverageArea>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.CoverageArea))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ImageryMetadataBirdseyeResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.MapUriRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.MapUriOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.MapUriResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SearchPoint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.UriScheme))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.MapStyle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RangeOfint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RangeOfdateTime))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ImageType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.Pushpin>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Pushpin))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RouteRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RouteOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.TravelMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RouteOptimization))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RoutePathType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.TrafficUsage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.Waypoint>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Waypoint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RouteResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RouteResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.RouteLeg>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RouteLeg))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.ItineraryItem>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ItineraryItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.ItineraryItemHint>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ItineraryItemHint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ItineraryItemHintType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ManeuverType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RouteSummary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.ItineraryItemWarning>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ItineraryItemWarning))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ItineraryWarningSeverity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ItineraryWarningType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RoutePath))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.MajorRoutesRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.MajorRoutesOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.MajorRoutesResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.RouteResult>))]
    public partial class ValueListFilter : PanoramicData.BingMapService.AvailableFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<object> ValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<object> Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Neighborhood", Namespace="http://dev.virtualearth.net/webservices/v1/search")]
    [System.SerializableAttribute()]
    public partial class Neighborhood : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FilterValue", Namespace="http://dev.virtualearth.net/webservices/v1/search")]
    [System.SerializableAttribute()]
    public partial class FilterValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://dev.virtualearth.net/webservices/v1/search")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RangeFilter", Namespace="http://dev.virtualearth.net/webservices/v1/search")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.GeocodeRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.GeocodeOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.FilterBase>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.FilterBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ConfidenceFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.GeocodeResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ReverseGeocodeRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RequestBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Credentials))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ExecutionOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.UserProfile))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Heading))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.UserLocation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Location))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.GeocodeLocation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Confidence))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.DeviceType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.DistanceUnit))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ShapeBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Rectangle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Circle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Polygon))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.Location>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SizeOfint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Address))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ResponseBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ResponseSummary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.AuthenticationResultCode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ResponseStatusCode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.GeocodeResult>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.GeocodeResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.GeocodeLocation>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SearchRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SearchOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ListingType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SortOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.StructuredSearchQuery))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SearchResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.QuerySuggestion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.SearchResultSet>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SearchResultSet))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.SearchRegion>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SearchRegion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.AvailableFilter>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.AvailableFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ValueListFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Neighborhood))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.FilterValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Category))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.CategoryCount>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.CategoryCount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Parse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.SearchResultBase>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SearchResultBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.LocationData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.CommunityContentSearchResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.BusinessSearchResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.Category>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.CategorySpecificPropertySet))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.Neighborhood>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.PersonSearchResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<PanoramicData.BingMapService.Neighborhood, int>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, PanoramicData.BingMapService.CategorySpecificPropertySet>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.FilterExpressionBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.LogicalOperator))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.FilterExpression))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.CompareOperator))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.FilterExpressionClause))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.FilterExpressionBase>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ImageryMetadataRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ImageryMetadataOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ImageryMetadataResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.ImageryMetadataResult>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ImageryMetadataResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.ImageryProvider>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ImageryProvider))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.CoverageArea>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.CoverageArea))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ImageryMetadataBirdseyeResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.MapUriRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.MapUriOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.MapUriResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.SearchPoint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.UriScheme))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.MapStyle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RangeOfint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RangeOfdateTime))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ImageType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.Pushpin>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Pushpin))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RouteRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RouteOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.TravelMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RouteOptimization))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RoutePathType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.TrafficUsage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.Waypoint>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.Waypoint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RouteResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RouteResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.RouteLeg>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RouteLeg))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.ItineraryItem>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ItineraryItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.ItineraryItemHint>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ItineraryItemHint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ItineraryItemHintType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ManeuverType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RouteSummary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.ItineraryItemWarning>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ItineraryItemWarning))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ItineraryWarningSeverity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ItineraryWarningType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.RoutePath))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.MajorRoutesRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.MajorRoutesOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.MajorRoutesResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<PanoramicData.BingMapService.RouteResult>))]
    public partial class RangeFilter : PanoramicData.BingMapService.AvailableFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object MaximumValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object MinimumValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object MaximumValue {
            get {
                return this.MaximumValueField;
            }
            set {
                if ((object.ReferenceEquals(this.MaximumValueField, value) != true)) {
                    this.MaximumValueField = value;
                    this.RaisePropertyChanged("MaximumValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object MinimumValue {
            get {
                return this.MinimumValueField;
            }
            set {
                if ((object.ReferenceEquals(this.MinimumValueField, value) != true)) {
                    this.MinimumValueField = value;
                    this.RaisePropertyChanged("MinimumValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryCount", Namespace="http://dev.virtualearth.net/webservices/v1/search")]
    [System.SerializableAttribute()]
    public partial class CategoryCount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Category CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<PanoramicData.BingMapService.Neighborhood, int> CountByNeighborhoodField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Category Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<PanoramicData.BingMapService.Neighborhood, int> CountByNeighborhood {
            get {
                return this.CountByNeighborhoodField;
            }
            set {
                if ((object.ReferenceEquals(this.CountByNeighborhoodField, value) != true)) {
                    this.CountByNeighborhoodField = value;
                    this.RaisePropertyChanged("CountByNeighborhood");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Parse", Namespace="http://dev.virtualearth.net/webservices/v1/search")]
    [System.SerializableAttribute()]
    public partial class Parse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Address AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeywordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LandmarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationSeparatorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Address Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keyword {
            get {
                return this.KeywordField;
            }
            set {
                if ((object.ReferenceEquals(this.KeywordField, value) != true)) {
                    this.KeywordField = value;
                    this.RaisePropertyChanged("Keyword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Landmark {
            get {
                return this.LandmarkField;
            }
            set {
                if ((object.ReferenceEquals(this.LandmarkField, value) != true)) {
                    this.LandmarkField = value;
                    this.RaisePropertyChanged("Landmark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationSeparator {
            get {
                return this.LocationSeparatorField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationSeparatorField, value) != true)) {
                    this.LocationSeparatorField = value;
                    this.RaisePropertyChanged("LocationSeparator");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchResultBase", Namespace="http://dev.virtualearth.net/webservices/v1/search")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.CommunityContentSearchResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.BusinessSearchResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.PersonSearchResult))]
    public partial class SearchResultBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DistanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.LocationData LocationDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Distance {
            get {
                return this.DistanceField;
            }
            set {
                if ((this.DistanceField.Equals(value) != true)) {
                    this.DistanceField = value;
                    this.RaisePropertyChanged("Distance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.LocationData LocationData {
            get {
                return this.LocationDataField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationDataField, value) != true)) {
                    this.LocationDataField = value;
                    this.RaisePropertyChanged("LocationData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationData", Namespace="http://dev.virtualearth.net/webservices/v1/search")]
    [System.SerializableAttribute()]
    public partial class LocationData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Confidence ConfidenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<PanoramicData.BingMapService.GeocodeLocation> LocationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> MatchCodesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Confidence Confidence {
            get {
                return this.ConfidenceField;
            }
            set {
                if ((this.ConfidenceField.Equals(value) != true)) {
                    this.ConfidenceField = value;
                    this.RaisePropertyChanged("Confidence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PanoramicData.BingMapService.GeocodeLocation> Locations {
            get {
                return this.LocationsField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationsField, value) != true)) {
                    this.LocationsField = value;
                    this.RaisePropertyChanged("Locations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> MatchCodes {
            get {
                return this.MatchCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchCodesField, value) != true)) {
                    this.MatchCodesField = value;
                    this.RaisePropertyChanged("MatchCodes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommunityContentSearchResult", Namespace="http://dev.virtualearth.net/webservices/v1/search")]
    [System.SerializableAttribute()]
    public partial class CommunityContentSearchResult : PanoramicData.BingMapService.SearchResultBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, object> AdditionalPropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, object> AdditionalProperties {
            get {
                return this.AdditionalPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalPropertiesField, value) != true)) {
                    this.AdditionalPropertiesField = value;
                    this.RaisePropertyChanged("AdditionalProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessSearchResult", Namespace="http://dev.virtualearth.net/webservices/v1/search")]
    [System.SerializableAttribute()]
    public partial class BusinessSearchResult : PanoramicData.BingMapService.SearchResultBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, object> AdditionalPropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Address AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<PanoramicData.BingMapService.Category> CategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, PanoramicData.BingMapService.CategorySpecificPropertySet> CategorySpecificPropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<PanoramicData.BingMapService.Neighborhood> NeighborhoodsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RatingCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReviewCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double UserRatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri WebsiteField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, object> AdditionalProperties {
            get {
                return this.AdditionalPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalPropertiesField, value) != true)) {
                    this.AdditionalPropertiesField = value;
                    this.RaisePropertyChanged("AdditionalProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Address Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PanoramicData.BingMapService.Category> Categories {
            get {
                return this.CategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoriesField, value) != true)) {
                    this.CategoriesField = value;
                    this.RaisePropertyChanged("Categories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, PanoramicData.BingMapService.CategorySpecificPropertySet> CategorySpecificProperties {
            get {
                return this.CategorySpecificPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.CategorySpecificPropertiesField, value) != true)) {
                    this.CategorySpecificPropertiesField = value;
                    this.RaisePropertyChanged("CategorySpecificProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PanoramicData.BingMapService.Neighborhood> Neighborhoods {
            get {
                return this.NeighborhoodsField;
            }
            set {
                if ((object.ReferenceEquals(this.NeighborhoodsField, value) != true)) {
                    this.NeighborhoodsField = value;
                    this.RaisePropertyChanged("Neighborhoods");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RatingCount {
            get {
                return this.RatingCountField;
            }
            set {
                if ((this.RatingCountField.Equals(value) != true)) {
                    this.RatingCountField = value;
                    this.RaisePropertyChanged("RatingCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReviewCount {
            get {
                return this.ReviewCountField;
            }
            set {
                if ((this.ReviewCountField.Equals(value) != true)) {
                    this.ReviewCountField = value;
                    this.RaisePropertyChanged("ReviewCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double UserRating {
            get {
                return this.UserRatingField;
            }
            set {
                if ((this.UserRatingField.Equals(value) != true)) {
                    this.UserRatingField = value;
                    this.RaisePropertyChanged("UserRating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri Website {
            get {
                return this.WebsiteField;
            }
            set {
                if ((object.ReferenceEquals(this.WebsiteField, value) != true)) {
                    this.WebsiteField = value;
                    this.RaisePropertyChanged("Website");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategorySpecificPropertySet", Namespace="http://dev.virtualearth.net/webservices/v1/search")]
    [System.SerializableAttribute()]
    public partial class CategorySpecificPropertySet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, object> PropertiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, object> Properties {
            get {
                return this.PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertiesField, value) != true)) {
                    this.PropertiesField = value;
                    this.RaisePropertyChanged("Properties");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonSearchResult", Namespace="http://dev.virtualearth.net/webservices/v1/search")]
    [System.SerializableAttribute()]
    public partial class PersonSearchResult : PanoramicData.BingMapService.SearchResultBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Address AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Address Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogicalOperator", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    public enum LogicalOperator : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        And = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Or = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompareOperator", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    public enum CompareOperator : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Equals = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GreaterThan = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GreaterThanOrEquals = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LessThan = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LessThanOrEquals = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageryMetadataOptions", Namespace="http://dev.virtualearth.net/webservices/v1/imagery")]
    [System.SerializableAttribute()]
    public partial class ImageryMetadataOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Heading HeadingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Location LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReturnImageryProvidersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.UriScheme UriSchemeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ZoomLevelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Heading Heading {
            get {
                return this.HeadingField;
            }
            set {
                if ((object.ReferenceEquals(this.HeadingField, value) != true)) {
                    this.HeadingField = value;
                    this.RaisePropertyChanged("Heading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Location Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReturnImageryProviders {
            get {
                return this.ReturnImageryProvidersField;
            }
            set {
                if ((this.ReturnImageryProvidersField.Equals(value) != true)) {
                    this.ReturnImageryProvidersField = value;
                    this.RaisePropertyChanged("ReturnImageryProviders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.UriScheme UriScheme {
            get {
                return this.UriSchemeField;
            }
            set {
                if ((this.UriSchemeField.Equals(value) != true)) {
                    this.UriSchemeField = value;
                    this.RaisePropertyChanged("UriScheme");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ZoomLevel {
            get {
                return this.ZoomLevelField;
            }
            set {
                if ((this.ZoomLevelField.Equals(value) != true)) {
                    this.ZoomLevelField = value;
                    this.RaisePropertyChanged("ZoomLevel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageryMetadataResponse", Namespace="http://dev.virtualearth.net/webservices/v1/imagery")]
    [System.SerializableAttribute()]
    public partial class ImageryMetadataResponse : PanoramicData.BingMapService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<PanoramicData.BingMapService.ImageryMetadataResult> ResultsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PanoramicData.BingMapService.ImageryMetadataResult> Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageryMetadataResult", Namespace="http://dev.virtualearth.net/webservices/v1/imagery")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.ImageryMetadataBirdseyeResult))]
    public partial class ImageryMetadataResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.SizeOfint ImageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageUriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> ImageUriSubdomainsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<PanoramicData.BingMapService.ImageryProvider> ImageryProvidersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.RangeOfdateTime VintageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.RangeOfint ZoomRangeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.SizeOfint ImageSize {
            get {
                return this.ImageSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageSizeField, value) != true)) {
                    this.ImageSizeField = value;
                    this.RaisePropertyChanged("ImageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUri {
            get {
                return this.ImageUriField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUriField, value) != true)) {
                    this.ImageUriField = value;
                    this.RaisePropertyChanged("ImageUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> ImageUriSubdomains {
            get {
                return this.ImageUriSubdomainsField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUriSubdomainsField, value) != true)) {
                    this.ImageUriSubdomainsField = value;
                    this.RaisePropertyChanged("ImageUriSubdomains");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PanoramicData.BingMapService.ImageryProvider> ImageryProviders {
            get {
                return this.ImageryProvidersField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageryProvidersField, value) != true)) {
                    this.ImageryProvidersField = value;
                    this.RaisePropertyChanged("ImageryProviders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.RangeOfdateTime Vintage {
            get {
                return this.VintageField;
            }
            set {
                if ((object.ReferenceEquals(this.VintageField, value) != true)) {
                    this.VintageField = value;
                    this.RaisePropertyChanged("Vintage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.RangeOfint ZoomRange {
            get {
                return this.ZoomRangeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoomRangeField, value) != true)) {
                    this.ZoomRangeField = value;
                    this.RaisePropertyChanged("ZoomRange");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageryProvider", Namespace="http://dev.virtualearth.net/webservices/v1/imagery")]
    [System.SerializableAttribute()]
    public partial class ImageryProvider : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<PanoramicData.BingMapService.CoverageArea> CoverageAreasField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Attribution {
            get {
                return this.AttributionField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributionField, value) != true)) {
                    this.AttributionField = value;
                    this.RaisePropertyChanged("Attribution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PanoramicData.BingMapService.CoverageArea> CoverageAreas {
            get {
                return this.CoverageAreasField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverageAreasField, value) != true)) {
                    this.CoverageAreasField = value;
                    this.RaisePropertyChanged("CoverageAreas");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CoverageArea", Namespace="http://dev.virtualearth.net/webservices/v1/imagery")]
    [System.SerializableAttribute()]
    public partial class CoverageArea : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Rectangle BoundingRectangleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.RangeOfint ZoomRangeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Rectangle BoundingRectangle {
            get {
                return this.BoundingRectangleField;
            }
            set {
                if ((object.ReferenceEquals(this.BoundingRectangleField, value) != true)) {
                    this.BoundingRectangleField = value;
                    this.RaisePropertyChanged("BoundingRectangle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.RangeOfint ZoomRange {
            get {
                return this.ZoomRangeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoomRangeField, value) != true)) {
                    this.ZoomRangeField = value;
                    this.RaisePropertyChanged("ZoomRange");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageryMetadataBirdseyeResult", Namespace="http://dev.virtualearth.net/webservices/v1/imagery")]
    [System.SerializableAttribute()]
    public partial class ImageryMetadataBirdseyeResult : PanoramicData.BingMapService.ImageryMetadataResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Heading HeadingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TilesXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TilesYField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Heading Heading {
            get {
                return this.HeadingField;
            }
            set {
                if ((object.ReferenceEquals(this.HeadingField, value) != true)) {
                    this.HeadingField = value;
                    this.RaisePropertyChanged("Heading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TilesX {
            get {
                return this.TilesXField;
            }
            set {
                if ((this.TilesXField.Equals(value) != true)) {
                    this.TilesXField = value;
                    this.RaisePropertyChanged("TilesX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TilesY {
            get {
                return this.TilesYField;
            }
            set {
                if ((this.TilesYField.Equals(value) != true)) {
                    this.TilesYField = value;
                    this.RaisePropertyChanged("TilesY");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MapUriOptions", Namespace="http://dev.virtualearth.net/webservices/v1/imagery")]
    [System.SerializableAttribute()]
    public partial class MapUriOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> DisplayLayersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.SizeOfint ImageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.ImageType ImageTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PreventIconCollisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.MapStyle StyleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.UriScheme UriSchemeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ZoomLevelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> DisplayLayers {
            get {
                return this.DisplayLayersField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayLayersField, value) != true)) {
                    this.DisplayLayersField = value;
                    this.RaisePropertyChanged("DisplayLayers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.SizeOfint ImageSize {
            get {
                return this.ImageSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageSizeField, value) != true)) {
                    this.ImageSizeField = value;
                    this.RaisePropertyChanged("ImageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.ImageType ImageType {
            get {
                return this.ImageTypeField;
            }
            set {
                if ((this.ImageTypeField.Equals(value) != true)) {
                    this.ImageTypeField = value;
                    this.RaisePropertyChanged("ImageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PreventIconCollision {
            get {
                return this.PreventIconCollisionField;
            }
            set {
                if ((this.PreventIconCollisionField.Equals(value) != true)) {
                    this.PreventIconCollisionField = value;
                    this.RaisePropertyChanged("PreventIconCollision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.MapStyle Style {
            get {
                return this.StyleField;
            }
            set {
                if ((this.StyleField.Equals(value) != true)) {
                    this.StyleField = value;
                    this.RaisePropertyChanged("Style");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.UriScheme UriScheme {
            get {
                return this.UriSchemeField;
            }
            set {
                if ((this.UriSchemeField.Equals(value) != true)) {
                    this.UriSchemeField = value;
                    this.RaisePropertyChanged("UriScheme");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ZoomLevel {
            get {
                return this.ZoomLevelField;
            }
            set {
                if ((this.ZoomLevelField.Equals(value) != true)) {
                    this.ZoomLevelField = value;
                    this.RaisePropertyChanged("ZoomLevel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MapUriResponse", Namespace="http://dev.virtualearth.net/webservices/v1/imagery")]
    [System.SerializableAttribute()]
    public partial class MapUriResponse : PanoramicData.BingMapService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UriField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Uri {
            get {
                return this.UriField;
            }
            set {
                if ((object.ReferenceEquals(this.UriField, value) != true)) {
                    this.UriField = value;
                    this.RaisePropertyChanged("Uri");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UriScheme", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    public enum UriScheme : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Http = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Https = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MapStyle", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    public enum MapStyle : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Road = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Aerial = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AerialWithLabels = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Birdseye = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BirdseyeWithLabels = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Road_v0 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AerialWithLabels_v0 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BirdseyeWithLabels_v0 = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Road_v1 = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AerialWithLabels_v1 = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BirdseyeWithLabels_v1 = 10,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RangeOfint", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    [System.SerializableAttribute()]
    public partial class RangeOfint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int From {
            get {
                return this.FromField;
            }
            set {
                if ((this.FromField.Equals(value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int To {
            get {
                return this.ToField;
            }
            set {
                if ((this.ToField.Equals(value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RangeOfdateTime", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    [System.SerializableAttribute()]
    public partial class RangeOfdateTime : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime From {
            get {
                return this.FromField;
            }
            set {
                if ((this.FromField.Equals(value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime To {
            get {
                return this.ToField;
            }
            set {
                if ((this.ToField.Equals(value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageType", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    public enum ImageType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Png = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Jpeg = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Gif = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Pushpin", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
    [System.SerializableAttribute()]
    public partial class Pushpin : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IconStyleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Location LocationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IconStyle {
            get {
                return this.IconStyleField;
            }
            set {
                if ((object.ReferenceEquals(this.IconStyleField, value) != true)) {
                    this.IconStyleField = value;
                    this.RaisePropertyChanged("IconStyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Location Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RouteOptions", Namespace="http://dev.virtualearth.net/webservices/v1/route")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PanoramicData.BingMapService.MajorRoutesOptions))]
    public partial class RouteOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.TravelMode ModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.RouteOptimization OptimizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.RoutePathType RoutePathTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.TrafficUsage TrafficUsageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.TravelMode Mode {
            get {
                return this.ModeField;
            }
            set {
                if ((this.ModeField.Equals(value) != true)) {
                    this.ModeField = value;
                    this.RaisePropertyChanged("Mode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.RouteOptimization Optimization {
            get {
                return this.OptimizationField;
            }
            set {
                if ((this.OptimizationField.Equals(value) != true)) {
                    this.OptimizationField = value;
                    this.RaisePropertyChanged("Optimization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.RoutePathType RoutePathType {
            get {
                return this.RoutePathTypeField;
            }
            set {
                if ((this.RoutePathTypeField.Equals(value) != true)) {
                    this.RoutePathTypeField = value;
                    this.RaisePropertyChanged("RoutePathType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.TrafficUsage TrafficUsage {
            get {
                return this.TrafficUsageField;
            }
            set {
                if ((this.TrafficUsageField.Equals(value) != true)) {
                    this.TrafficUsageField = value;
                    this.RaisePropertyChanged("TrafficUsage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TravelMode", Namespace="http://dev.virtualearth.net/webservices/v1/route")]
    public enum TravelMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Driving = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Walking = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RouteOptimization", Namespace="http://dev.virtualearth.net/webservices/v1/route")]
    public enum RouteOptimization : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MinimizeTime = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MinimizeDistance = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoutePathType", Namespace="http://dev.virtualearth.net/webservices/v1/route")]
    public enum RoutePathType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Points = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrafficUsage", Namespace="http://dev.virtualearth.net/webservices/v1/route")]
    public enum TrafficUsage : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrafficBasedTime = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrafficBasedRouteAndTime = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Waypoint", Namespace="http://dev.virtualearth.net/webservices/v1/route")]
    [System.SerializableAttribute()]
    public partial class Waypoint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Location LocationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Location Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RouteResponse", Namespace="http://dev.virtualearth.net/webservices/v1/route")]
    [System.SerializableAttribute()]
    public partial class RouteResponse : PanoramicData.BingMapService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.RouteResult ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.RouteResult Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RouteResult", Namespace="http://dev.virtualearth.net/webservices/v1/route")]
    [System.SerializableAttribute()]
    public partial class RouteResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<PanoramicData.BingMapService.RouteLeg> LegsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.RoutePath RoutePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.RouteSummary SummaryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PanoramicData.BingMapService.RouteLeg> Legs {
            get {
                return this.LegsField;
            }
            set {
                if ((object.ReferenceEquals(this.LegsField, value) != true)) {
                    this.LegsField = value;
                    this.RaisePropertyChanged("Legs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.RoutePath RoutePath {
            get {
                return this.RoutePathField;
            }
            set {
                if ((object.ReferenceEquals(this.RoutePathField, value) != true)) {
                    this.RoutePathField = value;
                    this.RaisePropertyChanged("RoutePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.RouteSummary Summary {
            get {
                return this.SummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.SummaryField, value) != true)) {
                    this.SummaryField = value;
                    this.RaisePropertyChanged("Summary");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RouteLeg", Namespace="http://dev.virtualearth.net/webservices/v1/route")]
    [System.SerializableAttribute()]
    public partial class RouteLeg : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Location ActualEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Location ActualStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<PanoramicData.BingMapService.ItineraryItem> ItineraryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.RouteSummary SummaryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Location ActualEnd {
            get {
                return this.ActualEndField;
            }
            set {
                if ((object.ReferenceEquals(this.ActualEndField, value) != true)) {
                    this.ActualEndField = value;
                    this.RaisePropertyChanged("ActualEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Location ActualStart {
            get {
                return this.ActualStartField;
            }
            set {
                if ((object.ReferenceEquals(this.ActualStartField, value) != true)) {
                    this.ActualStartField = value;
                    this.RaisePropertyChanged("ActualStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PanoramicData.BingMapService.ItineraryItem> Itinerary {
            get {
                return this.ItineraryField;
            }
            set {
                if ((object.ReferenceEquals(this.ItineraryField, value) != true)) {
                    this.ItineraryField = value;
                    this.RaisePropertyChanged("Itinerary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.RouteSummary Summary {
            get {
                return this.SummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.SummaryField, value) != true)) {
                    this.SummaryField = value;
                    this.RaisePropertyChanged("Summary");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItineraryItem", Namespace="http://dev.virtualearth.net/webservices/v1/route")]
    [System.SerializableAttribute()]
    public partial class ItineraryItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompassDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<PanoramicData.BingMapService.ItineraryItemHint> HintsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Location LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.ManeuverType ManeuverTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.RouteSummary SummaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<PanoramicData.BingMapService.ItineraryItemWarning> WarningsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompassDirection {
            get {
                return this.CompassDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CompassDirectionField, value) != true)) {
                    this.CompassDirectionField = value;
                    this.RaisePropertyChanged("CompassDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PanoramicData.BingMapService.ItineraryItemHint> Hints {
            get {
                return this.HintsField;
            }
            set {
                if ((object.ReferenceEquals(this.HintsField, value) != true)) {
                    this.HintsField = value;
                    this.RaisePropertyChanged("Hints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Location Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.ManeuverType ManeuverType {
            get {
                return this.ManeuverTypeField;
            }
            set {
                if ((this.ManeuverTypeField.Equals(value) != true)) {
                    this.ManeuverTypeField = value;
                    this.RaisePropertyChanged("ManeuverType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.RouteSummary Summary {
            get {
                return this.SummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.SummaryField, value) != true)) {
                    this.SummaryField = value;
                    this.RaisePropertyChanged("Summary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PanoramicData.BingMapService.ItineraryItemWarning> Warnings {
            get {
                return this.WarningsField;
            }
            set {
                if ((object.ReferenceEquals(this.WarningsField, value) != true)) {
                    this.WarningsField = value;
                    this.RaisePropertyChanged("Warnings");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItineraryItemHint", Namespace="http://dev.virtualearth.net/webservices/v1/route")]
    [System.SerializableAttribute()]
    public partial class ItineraryItemHint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.ItineraryItemHintType HintTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.ItineraryItemHintType HintType {
            get {
                return this.HintTypeField;
            }
            set {
                if ((this.HintTypeField.Equals(value) != true)) {
                    this.HintTypeField = value;
                    this.RaisePropertyChanged("HintType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItineraryItemHintType", Namespace="http://dev.virtualearth.net/webservices/v1/route")]
    public enum ItineraryItemHintType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreviousIntersection = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NextIntersection = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Landmark = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ManeuverType", Namespace="http://dev.virtualearth.net/webservices/v1/route")]
    public enum ManeuverType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepartStart = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepartIntermediateStop = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepartIntermediateStopReturning = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArriveFinish = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArriveIntermediateStop = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TurnLeft = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TurnRight = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TurnBack = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UTurn = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TurnToStayLeft = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TurnToStayRight = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BearLeft = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BearRight = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KeepToStayLeft = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KeepToStayRight = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KeepToStayStraight = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KeepLeft = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KeepRight = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KeepStraight = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Take = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TakeRampLeft = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TakeRampRight = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TakeRampStraight = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KeepOnrampLeft = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KeepOnrampRight = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KeepOnrampStraight = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Merge = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Continue = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RoadNameChange = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnterRoundabout = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExitRoundabout = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TurnRightThenTurnRight = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TurnRightThenTurnLeft = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TurnRightThenBearRight = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TurnRightThenBearLeft = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TurnLeftThenTurnLeft = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TurnLeftThenTurnRight = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TurnLeftThenBearLeft = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TurnLeftThenBearRight = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BearRightThenTurnRight = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BearRightThenTurnLeft = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BearRightThenBearRight = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BearRightThenBearLeft = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BearLeftThenTurnLeft = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BearLeftThenTurnRight = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BearLeftThenBearRight = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BearLeftThenBearLeft = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RampThenHighwayRight = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RampThenHighwayLeft = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RampToHighwayStraight = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnterThenExitRoundabout = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BearThenMerge = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TurnThenMerge = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BearThenKeep = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Transfer = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wait = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TakeTransit = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Walk = 59,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RouteSummary", Namespace="http://dev.virtualearth.net/webservices/v1/route")]
    [System.SerializableAttribute()]
    public partial class RouteSummary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.Rectangle BoundingRectangleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DistanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TimeInSecondsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.Rectangle BoundingRectangle {
            get {
                return this.BoundingRectangleField;
            }
            set {
                if ((object.ReferenceEquals(this.BoundingRectangleField, value) != true)) {
                    this.BoundingRectangleField = value;
                    this.RaisePropertyChanged("BoundingRectangle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Distance {
            get {
                return this.DistanceField;
            }
            set {
                if ((this.DistanceField.Equals(value) != true)) {
                    this.DistanceField = value;
                    this.RaisePropertyChanged("Distance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TimeInSeconds {
            get {
                return this.TimeInSecondsField;
            }
            set {
                if ((this.TimeInSecondsField.Equals(value) != true)) {
                    this.TimeInSecondsField = value;
                    this.RaisePropertyChanged("TimeInSeconds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItineraryItemWarning", Namespace="http://dev.virtualearth.net/webservices/v1/route")]
    [System.SerializableAttribute()]
    public partial class ItineraryItemWarning : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.ItineraryWarningSeverity SeverityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PanoramicData.BingMapService.ItineraryWarningType WarningTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.ItineraryWarningSeverity Severity {
            get {
                return this.SeverityField;
            }
            set {
                if ((this.SeverityField.Equals(value) != true)) {
                    this.SeverityField = value;
                    this.RaisePropertyChanged("Severity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PanoramicData.BingMapService.ItineraryWarningType WarningType {
            get {
                return this.WarningTypeField;
            }
            set {
                if ((this.WarningTypeField.Equals(value) != true)) {
                    this.WarningTypeField = value;
                    this.RaisePropertyChanged("WarningType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItineraryWarningSeverity", Namespace="http://dev.virtualearth.net/webservices/v1/route")]
    public enum ItineraryWarningSeverity : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LowImpact = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Minor = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Moderate = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Serious = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItineraryWarningType", Namespace="http://dev.virtualearth.net/webservices/v1/route")]
    public enum ItineraryWarningType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Accident = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdminDivisionChange = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BlockedRoad = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckTimetable = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Congestion = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountryChange = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisabledVehicle = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GateAccess = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GetOffTransit = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GetOnTransit = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IllegalUTurn = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MassTransit = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Miscellaneous = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoIncident = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OtherNews = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OtherTrafficIncidents = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlannedEvent = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrivateRoad = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RestrictedTurn = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RoadClosures = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RoadHazard = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScheduledConstruction = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SeasonalClosures = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tollbooth = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TollRoad = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrafficFlow = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnpavedRoad = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnscheduledConstruction = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weather = 30,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoutePath", Namespace="http://dev.virtualearth.net/webservices/v1/route")]
    [System.SerializableAttribute()]
    public partial class RoutePath : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<PanoramicData.BingMapService.Location> PointsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PanoramicData.BingMapService.Location> Points {
            get {
                return this.PointsField;
            }
            set {
                if ((object.ReferenceEquals(this.PointsField, value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MajorRoutesOptions", Namespace="http://dev.virtualearth.net/webservices/v1/route")]
    [System.SerializableAttribute()]
    public partial class MajorRoutesOptions : PanoramicData.BingMapService.RouteOptions {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReturnRoutesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReturnRoutes {
            get {
                return this.ReturnRoutesField;
            }
            set {
                if ((this.ReturnRoutesField.Equals(value) != true)) {
                    this.ReturnRoutesField = value;
                    this.RaisePropertyChanged("ReturnRoutes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MajorRoutesResponse", Namespace="http://dev.virtualearth.net/webservices/v1/route")]
    [System.SerializableAttribute()]
    public partial class MajorRoutesResponse : PanoramicData.BingMapService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<PanoramicData.BingMapService.RouteResult> RoutesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<PanoramicData.BingMapService.Waypoint> StartingPointsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PanoramicData.BingMapService.RouteResult> Routes {
            get {
                return this.RoutesField;
            }
            set {
                if ((object.ReferenceEquals(this.RoutesField, value) != true)) {
                    this.RoutesField = value;
                    this.RaisePropertyChanged("Routes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PanoramicData.BingMapService.Waypoint> StartingPoints {
            get {
                return this.StartingPointsField;
            }
            set {
                if ((object.ReferenceEquals(this.StartingPointsField, value) != true)) {
                    this.StartingPointsField = value;
                    this.RaisePropertyChanged("StartingPoints");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://dev.virtualearth.net/webservices/v1/geocode/contracts", ConfigurationName="BingMapService.IGeocodeService")]
    public interface IGeocodeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dev.virtualearth.net/webservices/v1/geocode/contracts/IGeocodeService/Geoc" +
            "ode", ReplyAction="http://dev.virtualearth.net/webservices/v1/geocode/contracts/IGeocodeService/Geoc" +
            "odeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PanoramicData.BingMapService.ResponseSummary), Action="http://dev.virtualearth.net/webservices/v1/geocode/contracts/IGeocodeService/Geoc" +
            "odeResponseSummaryFault", Name="ResponseSummary", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
        PanoramicData.BingMapService.GeocodeResponse Geocode(PanoramicData.BingMapService.GeocodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dev.virtualearth.net/webservices/v1/geocode/contracts/IGeocodeService/Geoc" +
            "ode", ReplyAction="http://dev.virtualearth.net/webservices/v1/geocode/contracts/IGeocodeService/Geoc" +
            "odeResponse")]
        System.Threading.Tasks.Task<PanoramicData.BingMapService.GeocodeResponse> GeocodeAsync(PanoramicData.BingMapService.GeocodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dev.virtualearth.net/webservices/v1/geocode/contracts/IGeocodeService/Reve" +
            "rseGeocode", ReplyAction="http://dev.virtualearth.net/webservices/v1/geocode/contracts/IGeocodeService/Reve" +
            "rseGeocodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PanoramicData.BingMapService.ResponseSummary), Action="http://dev.virtualearth.net/webservices/v1/geocode/contracts/IGeocodeService/Reve" +
            "rseGeocodeResponseSummaryFault", Name="ResponseSummary", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
        PanoramicData.BingMapService.GeocodeResponse ReverseGeocode(PanoramicData.BingMapService.ReverseGeocodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dev.virtualearth.net/webservices/v1/geocode/contracts/IGeocodeService/Reve" +
            "rseGeocode", ReplyAction="http://dev.virtualearth.net/webservices/v1/geocode/contracts/IGeocodeService/Reve" +
            "rseGeocodeResponse")]
        System.Threading.Tasks.Task<PanoramicData.BingMapService.GeocodeResponse> ReverseGeocodeAsync(PanoramicData.BingMapService.ReverseGeocodeRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGeocodeServiceChannel : PanoramicData.BingMapService.IGeocodeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GeocodeServiceClient : System.ServiceModel.ClientBase<PanoramicData.BingMapService.IGeocodeService>, PanoramicData.BingMapService.IGeocodeService {
        
        public GeocodeServiceClient() {
        }
        
        public GeocodeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GeocodeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GeocodeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GeocodeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PanoramicData.BingMapService.GeocodeResponse Geocode(PanoramicData.BingMapService.GeocodeRequest request) {
            return base.Channel.Geocode(request);
        }
        
        public System.Threading.Tasks.Task<PanoramicData.BingMapService.GeocodeResponse> GeocodeAsync(PanoramicData.BingMapService.GeocodeRequest request) {
            return base.Channel.GeocodeAsync(request);
        }
        
        public PanoramicData.BingMapService.GeocodeResponse ReverseGeocode(PanoramicData.BingMapService.ReverseGeocodeRequest request) {
            return base.Channel.ReverseGeocode(request);
        }
        
        public System.Threading.Tasks.Task<PanoramicData.BingMapService.GeocodeResponse> ReverseGeocodeAsync(PanoramicData.BingMapService.ReverseGeocodeRequest request) {
            return base.Channel.ReverseGeocodeAsync(request);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://dev.virtualearth.net/webservices/v1/search/contracts", ConfigurationName="BingMapService.ISearchService")]
    public interface ISearchService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dev.virtualearth.net/webservices/v1/search/contracts/ISearchService/Search" +
            "", ReplyAction="http://dev.virtualearth.net/webservices/v1/search/contracts/ISearchService/Search" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(PanoramicData.BingMapService.ResponseSummary), Action="http://dev.virtualearth.net/webservices/v1/search/contracts/ISearchService/Search" +
            "ResponseSummaryFault", Name="ResponseSummary", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
        PanoramicData.BingMapService.SearchResponse Search(PanoramicData.BingMapService.SearchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dev.virtualearth.net/webservices/v1/search/contracts/ISearchService/Search" +
            "", ReplyAction="http://dev.virtualearth.net/webservices/v1/search/contracts/ISearchService/Search" +
            "Response")]
        System.Threading.Tasks.Task<PanoramicData.BingMapService.SearchResponse> SearchAsync(PanoramicData.BingMapService.SearchRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISearchServiceChannel : PanoramicData.BingMapService.ISearchService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchServiceClient : System.ServiceModel.ClientBase<PanoramicData.BingMapService.ISearchService>, PanoramicData.BingMapService.ISearchService {
        
        public SearchServiceClient() {
        }
        
        public SearchServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SearchServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SearchServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SearchServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PanoramicData.BingMapService.SearchResponse Search(PanoramicData.BingMapService.SearchRequest request) {
            return base.Channel.Search(request);
        }
        
        public System.Threading.Tasks.Task<PanoramicData.BingMapService.SearchResponse> SearchAsync(PanoramicData.BingMapService.SearchRequest request) {
            return base.Channel.SearchAsync(request);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://dev.virtualearth.net/webservices/v1/imagery/contracts", ConfigurationName="BingMapService.IImageryService")]
    public interface IImageryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dev.virtualearth.net/webservices/v1/imagery/contracts/IImageryService/GetI" +
            "mageryMetadata", ReplyAction="http://dev.virtualearth.net/webservices/v1/imagery/contracts/IImageryService/GetI" +
            "mageryMetadataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PanoramicData.BingMapService.ResponseSummary), Action="http://dev.virtualearth.net/webservices/v1/imagery/contracts/IImageryService/GetI" +
            "mageryMetadataResponseSummaryFault", Name="ResponseSummary", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
        PanoramicData.BingMapService.ImageryMetadataResponse GetImageryMetadata(PanoramicData.BingMapService.ImageryMetadataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dev.virtualearth.net/webservices/v1/imagery/contracts/IImageryService/GetI" +
            "mageryMetadata", ReplyAction="http://dev.virtualearth.net/webservices/v1/imagery/contracts/IImageryService/GetI" +
            "mageryMetadataResponse")]
        System.Threading.Tasks.Task<PanoramicData.BingMapService.ImageryMetadataResponse> GetImageryMetadataAsync(PanoramicData.BingMapService.ImageryMetadataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dev.virtualearth.net/webservices/v1/imagery/contracts/IImageryService/GetM" +
            "apUri", ReplyAction="http://dev.virtualearth.net/webservices/v1/imagery/contracts/IImageryService/GetM" +
            "apUriResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PanoramicData.BingMapService.ResponseSummary), Action="http://dev.virtualearth.net/webservices/v1/imagery/contracts/IImageryService/GetM" +
            "apUriResponseSummaryFault", Name="ResponseSummary", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
        PanoramicData.BingMapService.MapUriResponse GetMapUri(PanoramicData.BingMapService.MapUriRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dev.virtualearth.net/webservices/v1/imagery/contracts/IImageryService/GetM" +
            "apUri", ReplyAction="http://dev.virtualearth.net/webservices/v1/imagery/contracts/IImageryService/GetM" +
            "apUriResponse")]
        System.Threading.Tasks.Task<PanoramicData.BingMapService.MapUriResponse> GetMapUriAsync(PanoramicData.BingMapService.MapUriRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IImageryServiceChannel : PanoramicData.BingMapService.IImageryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImageryServiceClient : System.ServiceModel.ClientBase<PanoramicData.BingMapService.IImageryService>, PanoramicData.BingMapService.IImageryService {
        
        public ImageryServiceClient() {
        }
        
        public ImageryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ImageryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImageryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImageryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PanoramicData.BingMapService.ImageryMetadataResponse GetImageryMetadata(PanoramicData.BingMapService.ImageryMetadataRequest request) {
            return base.Channel.GetImageryMetadata(request);
        }
        
        public System.Threading.Tasks.Task<PanoramicData.BingMapService.ImageryMetadataResponse> GetImageryMetadataAsync(PanoramicData.BingMapService.ImageryMetadataRequest request) {
            return base.Channel.GetImageryMetadataAsync(request);
        }
        
        public PanoramicData.BingMapService.MapUriResponse GetMapUri(PanoramicData.BingMapService.MapUriRequest request) {
            return base.Channel.GetMapUri(request);
        }
        
        public System.Threading.Tasks.Task<PanoramicData.BingMapService.MapUriResponse> GetMapUriAsync(PanoramicData.BingMapService.MapUriRequest request) {
            return base.Channel.GetMapUriAsync(request);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://dev.virtualearth.net/webservices/v1/route/contracts", ConfigurationName="BingMapService.IRouteService")]
    public interface IRouteService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dev.virtualearth.net/webservices/v1/route/contracts/IRouteService/Calculat" +
            "eRoute", ReplyAction="http://dev.virtualearth.net/webservices/v1/route/contracts/IRouteService/Calculat" +
            "eRouteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PanoramicData.BingMapService.ResponseSummary), Action="http://dev.virtualearth.net/webservices/v1/route/contracts/IRouteService/Calculat" +
            "eRouteResponseSummaryFault", Name="ResponseSummary", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
        PanoramicData.BingMapService.RouteResponse CalculateRoute(PanoramicData.BingMapService.RouteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dev.virtualearth.net/webservices/v1/route/contracts/IRouteService/Calculat" +
            "eRoute", ReplyAction="http://dev.virtualearth.net/webservices/v1/route/contracts/IRouteService/Calculat" +
            "eRouteResponse")]
        System.Threading.Tasks.Task<PanoramicData.BingMapService.RouteResponse> CalculateRouteAsync(PanoramicData.BingMapService.RouteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dev.virtualearth.net/webservices/v1/route/contracts/IRouteService/Calculat" +
            "eRoutesFromMajorRoads", ReplyAction="http://dev.virtualearth.net/webservices/v1/route/contracts/IRouteService/Calculat" +
            "eRoutesFromMajorRoadsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PanoramicData.BingMapService.ResponseSummary), Action="http://dev.virtualearth.net/webservices/v1/route/contracts/IRouteService/Calculat" +
            "eRoutesFromMajorRoadsResponseSummaryFault", Name="ResponseSummary", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
        PanoramicData.BingMapService.MajorRoutesResponse CalculateRoutesFromMajorRoads(PanoramicData.BingMapService.MajorRoutesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dev.virtualearth.net/webservices/v1/route/contracts/IRouteService/Calculat" +
            "eRoutesFromMajorRoads", ReplyAction="http://dev.virtualearth.net/webservices/v1/route/contracts/IRouteService/Calculat" +
            "eRoutesFromMajorRoadsResponse")]
        System.Threading.Tasks.Task<PanoramicData.BingMapService.MajorRoutesResponse> CalculateRoutesFromMajorRoadsAsync(PanoramicData.BingMapService.MajorRoutesRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRouteServiceChannel : PanoramicData.BingMapService.IRouteService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RouteServiceClient : System.ServiceModel.ClientBase<PanoramicData.BingMapService.IRouteService>, PanoramicData.BingMapService.IRouteService {
        
        public RouteServiceClient() {
        }
        
        public RouteServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RouteServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RouteServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RouteServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PanoramicData.BingMapService.RouteResponse CalculateRoute(PanoramicData.BingMapService.RouteRequest request) {
            return base.Channel.CalculateRoute(request);
        }
        
        public System.Threading.Tasks.Task<PanoramicData.BingMapService.RouteResponse> CalculateRouteAsync(PanoramicData.BingMapService.RouteRequest request) {
            return base.Channel.CalculateRouteAsync(request);
        }
        
        public PanoramicData.BingMapService.MajorRoutesResponse CalculateRoutesFromMajorRoads(PanoramicData.BingMapService.MajorRoutesRequest request) {
            return base.Channel.CalculateRoutesFromMajorRoads(request);
        }
        
        public System.Threading.Tasks.Task<PanoramicData.BingMapService.MajorRoutesResponse> CalculateRoutesFromMajorRoadsAsync(PanoramicData.BingMapService.MajorRoutesRequest request) {
            return base.Channel.CalculateRoutesFromMajorRoadsAsync(request);
        }
    }
}
